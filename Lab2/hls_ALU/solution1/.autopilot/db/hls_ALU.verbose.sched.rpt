

================================================================
== Vitis HLS Report for 'hls_ALU'
================================================================
* Date:           Sat Oct 23 11:25:32 2021

* Version:        2021.1.1 (Build 3286242 on Wed Jul 28 13:10:47 MDT 2021)
* Project:        hls_ALU
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.476 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute)  |  Interval | Pipeline|
    |   min   |   max   |    min    |    max   | min | max |   Type  |
    +---------+---------+-----------+----------+-----+-----+---------+
    |        1|       19|  10.000 ns|  0.190 us|    2|   20|       no|
    +---------+---------+-----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 25
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 20 21 25 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 20 
25 --> 20 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.64>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 0"   --->   Operation 26 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_7"   --->   Operation 27 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %a"   --->   Operation 28 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %a, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_2, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 29 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %a, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 30 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %b"   --->   Operation 31 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %b, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_4, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 32 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %b, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 33 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %c"   --->   Operation 34 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %c, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_5, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 35 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %c, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 36 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_6, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 37 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (1.00ns)   --->   "%c_read = read i16 @_ssdm_op_Read.s_axilite.i16, i16 %c" [hls_ALU.cpp:1]   --->   Operation 38 'read' 'c_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 39 [1/1] (1.00ns)   --->   "%b_read = read i16 @_ssdm_op_Read.s_axilite.i16, i16 %b" [hls_ALU.cpp:1]   --->   Operation 39 'read' 'b_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 40 [1/1] (1.00ns)   --->   "%a_read = read i16 @_ssdm_op_Read.s_axilite.i16, i16 %a" [hls_ALU.cpp:1]   --->   Operation 40 'read' 'a_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 41 [1/1] (1.82ns)   --->   "%switch_ln7 = switch i16 %c_read, void %.thread5, i16 0, void %.thread, i16 1, void, i16 2, void, i16 3, void" [hls_ALU.cpp:7]   --->   Operation 41 'switch' 'switch_ln7' <Predicate = true> <Delay = 1.82>
ST_1 : Operation 42 [20/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 42 'udiv' 'udiv_ln10' <Predicate = (c_read == 3)> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 3.64>
ST_2 : Operation 43 [19/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 43 'udiv' 'udiv_ln10' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 3.64>
ST_3 : Operation 44 [18/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 44 'udiv' 'udiv_ln10' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 3.64>
ST_4 : Operation 45 [17/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 45 'udiv' 'udiv_ln10' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 3.64>
ST_5 : Operation 46 [16/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 46 'udiv' 'udiv_ln10' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 3.64>
ST_6 : Operation 47 [15/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 47 'udiv' 'udiv_ln10' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 3.64>
ST_7 : Operation 48 [14/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 48 'udiv' 'udiv_ln10' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 3.64>
ST_8 : Operation 49 [13/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 49 'udiv' 'udiv_ln10' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 3.64>
ST_9 : Operation 50 [12/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 50 'udiv' 'udiv_ln10' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 3.64>
ST_10 : Operation 51 [11/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 51 'udiv' 'udiv_ln10' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 3.64>
ST_11 : Operation 52 [10/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 52 'udiv' 'udiv_ln10' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 3.64>
ST_12 : Operation 53 [9/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 53 'udiv' 'udiv_ln10' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 3.64>
ST_13 : Operation 54 [8/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 54 'udiv' 'udiv_ln10' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 3.64>
ST_14 : Operation 55 [7/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 55 'udiv' 'udiv_ln10' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 3.64>
ST_15 : Operation 56 [6/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 56 'udiv' 'udiv_ln10' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 3.64>
ST_16 : Operation 57 [5/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 57 'udiv' 'udiv_ln10' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 3.64>
ST_17 : Operation 58 [4/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 58 'udiv' 'udiv_ln10' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 3.64>
ST_18 : Operation 59 [3/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 59 'udiv' 'udiv_ln10' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 3.64>
ST_19 : Operation 60 [2/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 60 'udiv' 'udiv_ln10' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 5.47>
ST_20 : Operation 61 [1/20] (3.64ns)   --->   "%udiv_ln10 = udiv i16 %a_read, i16 %b_read" [hls_ALU.cpp:10]   --->   Operation 61 'udiv' 'udiv_ln10' <Predicate = (c_read == 3)> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 62 [1/1] (0.00ns)   --->   "%zext_ln10 = zext i16 %udiv_ln10" [hls_ALU.cpp:10]   --->   Operation 62 'zext' 'zext_ln10' <Predicate = (c_read == 3)> <Delay = 0.00>
ST_20 : Operation 63 [1/1] (1.82ns)   --->   "%br_ln10 = br void %.thread5" [hls_ALU.cpp:10]   --->   Operation 63 'br' 'br_ln10' <Predicate = (c_read == 3)> <Delay = 1.82>
ST_20 : Operation 64 [1/1] (0.00ns)   --->   "%phi_ln12 = phi i32 %zext_ln10, void, i32 %mul_ln9, void, i32 %zext_ln8, void %.thread, i32 %sext_ln8, void, i32 0, void" [hls_ALU.cpp:12]   --->   Operation 64 'phi' 'phi_ln12' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 65 [1/1] (0.00ns)   --->   "%ret_ln12 = ret i32 %phi_ln12" [hls_ALU.cpp:12]   --->   Operation 65 'ret' 'ret_ln12' <Predicate = true> <Delay = 0.00>

State 21 <SV = 15> <Delay = 2.15>
ST_21 : Operation 66 [1/1] (0.00ns)   --->   "%zext_ln9 = zext i16 %a_read" [hls_ALU.cpp:9]   --->   Operation 66 'zext' 'zext_ln9' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln9_1 = zext i16 %b_read" [hls_ALU.cpp:9]   --->   Operation 67 'zext' 'zext_ln9_1' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 68 [4/4] (2.15ns) (root node of the DSP)   --->   "%mul_ln9 = mul i32 %zext_ln9_1, i32 %zext_ln9" [hls_ALU.cpp:9]   --->   Operation 68 'mul' 'mul_ln9' <Predicate = true> <Delay = 2.15> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 22 <SV = 16> <Delay = 2.15>
ST_22 : Operation 69 [3/4] (2.15ns) (root node of the DSP)   --->   "%mul_ln9 = mul i32 %zext_ln9_1, i32 %zext_ln9" [hls_ALU.cpp:9]   --->   Operation 69 'mul' 'mul_ln9' <Predicate = true> <Delay = 2.15> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 23 <SV = 17> <Delay = 2.15>
ST_23 : Operation 70 [2/4] (2.15ns) (root node of the DSP)   --->   "%mul_ln9 = mul i32 %zext_ln9_1, i32 %zext_ln9" [hls_ALU.cpp:9]   --->   Operation 70 'mul' 'mul_ln9' <Predicate = true> <Delay = 2.15> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>

State 24 <SV = 18> <Delay = 1.82>
ST_24 : Operation 71 [1/4] (0.00ns) (root node of the DSP)   --->   "%mul_ln9 = mul i32 %zext_ln9_1, i32 %zext_ln9" [hls_ALU.cpp:9]   --->   Operation 71 'mul' 'mul_ln9' <Predicate = true> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 119 'DSP48' <Latency = 3> <II = 1> <Delay = 2.15> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_24 : Operation 72 [1/1] (1.82ns)   --->   "%br_ln9 = br void %.thread5" [hls_ALU.cpp:9]   --->   Operation 72 'br' 'br_ln9' <Predicate = true> <Delay = 1.82>

State 25 <SV = 18> <Delay = 2.07>
ST_25 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln8_1 = zext i16 %a_read" [hls_ALU.cpp:8]   --->   Operation 73 'zext' 'zext_ln8_1' <Predicate = (c_read == 1)> <Delay = 0.00>
ST_25 : Operation 74 [1/1] (0.00ns)   --->   "%zext_ln8_2 = zext i16 %b_read" [hls_ALU.cpp:8]   --->   Operation 74 'zext' 'zext_ln8_2' <Predicate = (c_read == 1)> <Delay = 0.00>
ST_25 : Operation 75 [1/1] (2.07ns)   --->   "%sub_ln8 = sub i17 %zext_ln8_1, i17 %zext_ln8_2" [hls_ALU.cpp:8]   --->   Operation 75 'sub' 'sub_ln8' <Predicate = (c_read == 1)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 76 [1/1] (0.00ns)   --->   "%sext_ln8 = sext i17 %sub_ln8" [hls_ALU.cpp:8]   --->   Operation 76 'sext' 'sext_ln8' <Predicate = (c_read == 1)> <Delay = 0.00>
ST_25 : Operation 77 [1/1] (1.82ns)   --->   "%br_ln8 = br void %.thread5" [hls_ALU.cpp:8]   --->   Operation 77 'br' 'br_ln8' <Predicate = (c_read == 1)> <Delay = 1.82>
ST_25 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln7 = zext i16 %a_read" [hls_ALU.cpp:7]   --->   Operation 78 'zext' 'zext_ln7' <Predicate = (c_read == 0)> <Delay = 0.00>
ST_25 : Operation 79 [1/1] (0.00ns)   --->   "%zext_ln7_1 = zext i16 %b_read" [hls_ALU.cpp:7]   --->   Operation 79 'zext' 'zext_ln7_1' <Predicate = (c_read == 0)> <Delay = 0.00>
ST_25 : Operation 80 [1/1] (2.07ns)   --->   "%add_ln7 = add i17 %zext_ln7_1, i17 %zext_ln7" [hls_ALU.cpp:7]   --->   Operation 80 'add' 'add_ln7' <Predicate = (c_read == 0)> <Delay = 2.07> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 2.07> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 81 [1/1] (0.00ns)   --->   "%zext_ln8 = zext i17 %add_ln7" [hls_ALU.cpp:8]   --->   Operation 81 'zext' 'zext_ln8' <Predicate = (c_read == 0)> <Delay = 0.00>
ST_25 : Operation 82 [1/1] (1.82ns)   --->   "%br_ln8 = br void %.thread5" [hls_ALU.cpp:8]   --->   Operation 82 'br' 'br_ln8' <Predicate = (c_read == 0)> <Delay = 1.82>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 4.65ns
The critical path consists of the following:
	s_axi read operation ('b', hls_ALU.cpp:1) on port 'b' (hls_ALU.cpp:1) [17]  (1 ns)
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 2>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 3>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 4>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 5>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 6>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 7>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 8>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 9>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 10>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 11>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 12>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 13>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 14>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 15>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 16>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 17>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 18>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 19>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)

 <State 20>: 5.48ns
The critical path consists of the following:
	'udiv' operation ('udiv_ln10', hls_ALU.cpp:10) [21]  (3.65 ns)
	multiplexor before 'phi' operation ('phi_ln12', hls_ALU.cpp:12) with incoming values : ('zext_ln10', hls_ALU.cpp:10) ('mul_ln9', hls_ALU.cpp:9) ('sext_ln8', hls_ALU.cpp:8) ('zext_ln8', hls_ALU.cpp:8) [42]  (1.83 ns)
	'phi' operation ('phi_ln12', hls_ALU.cpp:12) with incoming values : ('zext_ln10', hls_ALU.cpp:10) ('mul_ln9', hls_ALU.cpp:9) ('sext_ln8', hls_ALU.cpp:8) ('zext_ln8', hls_ALU.cpp:8) [42]  (0 ns)

 <State 21>: 2.15ns
The critical path consists of the following:
	'mul' operation of DSP[27] ('mul_ln9', hls_ALU.cpp:9) [27]  (2.15 ns)

 <State 22>: 2.15ns
The critical path consists of the following:
	'mul' operation of DSP[27] ('mul_ln9', hls_ALU.cpp:9) [27]  (2.15 ns)

 <State 23>: 2.15ns
The critical path consists of the following:
	'mul' operation of DSP[27] ('mul_ln9', hls_ALU.cpp:9) [27]  (2.15 ns)

 <State 24>: 1.83ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('phi_ln12', hls_ALU.cpp:12) with incoming values : ('zext_ln10', hls_ALU.cpp:10) ('mul_ln9', hls_ALU.cpp:9) ('sext_ln8', hls_ALU.cpp:8) ('zext_ln8', hls_ALU.cpp:8) [42]  (1.83 ns)

 <State 25>: 2.08ns
The critical path consists of the following:
	'sub' operation ('sub_ln8', hls_ALU.cpp:8) [32]  (2.08 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
