

================================================================
== Vitis HLS Report for 'hls_divider'
================================================================
* Date:           Thu Oct 21 23:54:58 2021

* Version:        2021.1.1 (Build 3286242 on Wed Jul 28 13:10:47 MDT 2021)
* Project:        hls_divider
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  4.649 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       19|       19|  0.190 us|  0.190 us|   20|   20|       no|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 20
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 4.64>
ST_1 : Operation 21 [1/1] (1.00ns)   --->   "%b_read = read i16 @_ssdm_op_Read.s_axilite.i16, i16 %b" [hls_divider.cpp:1]   --->   Operation 21 'read' 'b_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 22 [1/1] (1.00ns)   --->   "%a_read = read i16 @_ssdm_op_Read.s_axilite.i16, i16 %a" [hls_divider.cpp:1]   --->   Operation 22 'read' 'a_read' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 114 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 23 [20/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 23 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 2 <SV = 1> <Delay = 3.64>
ST_2 : Operation 24 [19/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 24 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 3.64>
ST_3 : Operation 25 [18/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 25 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 3.64>
ST_4 : Operation 26 [17/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 26 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 3.64>
ST_5 : Operation 27 [16/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 27 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 3.64>
ST_6 : Operation 28 [15/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 28 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 6> <Delay = 3.64>
ST_7 : Operation 29 [14/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 29 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 3.64>
ST_8 : Operation 30 [13/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 30 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 8> <Delay = 3.64>
ST_9 : Operation 31 [12/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 31 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 9> <Delay = 3.64>
ST_10 : Operation 32 [11/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 32 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 10> <Delay = 3.64>
ST_11 : Operation 33 [10/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 33 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 11> <Delay = 3.64>
ST_12 : Operation 34 [9/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 34 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 12> <Delay = 3.64>
ST_13 : Operation 35 [8/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 35 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 14 <SV = 13> <Delay = 3.64>
ST_14 : Operation 36 [7/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 36 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 15 <SV = 14> <Delay = 3.64>
ST_15 : Operation 37 [6/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 37 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 16 <SV = 15> <Delay = 3.64>
ST_16 : Operation 38 [5/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 38 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 17 <SV = 16> <Delay = 3.64>
ST_17 : Operation 39 [4/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 39 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 18 <SV = 17> <Delay = 3.64>
ST_18 : Operation 40 [3/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 40 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 3.64>
ST_19 : Operation 41 [2/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 41 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 3.64>
ST_20 : Operation 42 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 0"   --->   Operation 42 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 43 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_6"   --->   Operation 43 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 44 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %a"   --->   Operation 44 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 45 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %a, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_2, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 45 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 46 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %a, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 46 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 47 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %b"   --->   Operation 47 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 48 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %b, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_4, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 48 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 49 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %b, void @empty_3, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 49 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 50 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_5, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 50 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 51 [1/20] (3.64ns)   --->   "%q = udiv i16 %a_read, i16 %b_read" [hls_divider.cpp:6]   --->   Operation 51 'udiv' 'q' <Predicate = true> <Delay = 3.64> <CoreInst = "DivnS_SEQ">   --->   Core 7 'DivnS_SEQ' <Latency = 19> <II = 16> <Delay = 3.64> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 52 [1/1] (0.00ns)   --->   "%zext_ln6 = zext i16 %q" [hls_divider.cpp:6]   --->   Operation 52 'zext' 'zext_ln6' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 53 [1/1] (0.00ns)   --->   "%ret_ln7 = ret i32 %zext_ln6" [hls_divider.cpp:7]   --->   Operation 53 'ret' 'ret_ln7' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 4.65ns
The critical path consists of the following:
	s_axi read operation ('b', hls_divider.cpp:1) on port 'b' (hls_divider.cpp:1) [12]  (1 ns)
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 2>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 3>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 4>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 5>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 6>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 7>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 8>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 9>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 10>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 11>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 12>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 13>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 14>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 15>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 16>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 17>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 18>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 19>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)

 <State 20>: 3.65ns
The critical path consists of the following:
	'udiv' operation ('q', hls_divider.cpp:6) [14]  (3.65 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
