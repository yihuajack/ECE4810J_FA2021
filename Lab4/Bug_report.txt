<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office" xmlns:w="urn:schemas-microsoft-com:office:word" xmlns:m="http://schemas.microsoft.com/office/2004/12/omml" xmlns="http://www.w3.org/TR/REC-html40"><head><meta http-equiv=Content-Type content="text/html; charset=gb2312"><meta name=Generator content="Microsoft Word 15 (filtered medium)"><!--[if !mso]><style>v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
w\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
</style><![endif]--><style><!--
/* Font Definitions */
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:等线;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:"\@等线";
	panose-1:2 1 6 0 3 1 1 1 1 1;}
/* Style Definitions */
p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin:0cm;
	text-align:justify;
	text-justify:inter-ideograph;
	font-size:10.5pt;
	font-family:等线;}
a:link, span.MsoHyperlink
	{mso-style-priority:99;
	color:#0563C1;
	text-decoration:underline;}
span.EmailStyle17
	{mso-style-type:personal-compose;
	font-family:等线;
	color:windowtext;}
.MsoChpDefault
	{mso-style-type:export-only;
	font-family:等线;}
/* Page Definitions */
@page WordSection1
	{size:612.0pt 792.0pt;
	margin:72.0pt 90.0pt 72.0pt 90.0pt;}
div.WordSection1
	{page:WordSection1;}
--></style><!--[if gte mso 9]><xml>
<o:shapedefaults v:ext="edit" spidmax="1026" />
</xml><![endif]--><!--[if gte mso 9]><xml>
<o:shapelayout v:ext="edit">
<o:idmap v:ext="edit" data="1" />
</o:shapelayout></xml><![endif]--></head><body lang=ZH-CN link="#0563C1" vlink="#954F72" style='word-wrap:break-word;text-justify-trim:punctuation'><div class=WordSection1><p class=MsoNormal><span lang=EN-US>Dear Prof. Guo,<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span lang=EN-US>After a long time of research, I have found why the solution use 12288 FIFO BRAM_18K.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span lang=EN-US>Firstly, I found the following lines in vitis_hls.log or yuv_filter.prj/solution3/solution3.log below Finished Creating RTL model:<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'Y_scale_c_U(yuv_filter_fifo_w8_d3_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'U_scale_c_U(yuv_filter_fifo_w8_d3_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'V_scale_c_U(yuv_filter_fifo_w8_d3_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_yuv_channels_ch1_U(yuv_filter_fifo_w8_d2457600_A)' using Vivado Default RAMs.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_yuv_channels_ch2_U(yuv_filter_fifo_w8_d2457600_A)' using Vivado Default RAMs.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_yuv_channels_ch3_U(yuv_filter_fifo_w8_d2457600_A)' using Vivado Default RAMs.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_yuv_width_U(yuv_filter_fifo_w16_d2_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_yuv_height_U(yuv_filter_fifo_w16_d2_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_scale_channels_ch1_U(yuv_filter_fifo_w8_d2457600_A)' using Vivado Default RAMs.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_scale_channels_ch2_U(yuv_filter_fifo_w8_d2457600_A)' using Vivado Default RAMs.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_scale_channels_ch3_U(yuv_filter_fifo_w8_d2457600_A)' using Vivado Default RAMs.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_scale_width_U(yuv_filter_fifo_w16_d2_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_scale_height_U(yuv_filter_fifo_w16_d2_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'start_for_yuv_scale_U0_U(yuv_filter_start_for_yuv_scale_U0)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'start_for_yuv2rgb_1_U0_U(yuv_filter_start_for_yuv2rgb_1_U0)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span lang=EN-US>The proper logfile should show:<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'Y_scale_c_U(yuv_filter_fifo_w8_d3_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'U_scale_c_U(yuv_filter_fifo_w8_d3_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'V_scale_c_U(yuv_filter_fifo_w8_d3_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_yuv_channels_ch1_U(yuv_filter_fifo_w8_d2_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_yuv_channels_ch2_U(yuv_filter_fifo_w8_d2_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_yuv_channels_ch3_U(yuv_filter_fifo_w8_d2_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_yuv_width_U(yuv_filter_fifo_w16_d2_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_yuv_height_U(yuv_filter_fifo_w16_d2_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_scale_channels_ch1_U(yuv_filter_fifo_w8_d2_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_scale_channels_ch2_U(yuv_filter_fifo_w8_d2_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_scale_channels_ch3_U(yuv_filter_fifo_w8_d2_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_scale_width_U(yuv_filter_fifo_w16_d2_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'p_scale_height_U(yuv_filter_fifo_w16_d2_S)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'start_for_yuv_scale_U0_U(yuv_filter_start_for_yuv_scale_U0)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>INFO: [RTMG 210-285] Implementing FIFO 'start_for_yuv2rgb_1_U0_U(yuv_filter_start_for_yuv2rgb_1_U0)' using Shift Registers.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span lang=EN-US>We can see that FIFO ‘p_yuv_chanels’ and ‘p_scale_channels’ use Vivado Default RAMs (here they are BRAM (Block RAM)) rather than Shift Registers. It can be also confirmed by looking up the synthesis report that each FIFO channel uses 2048 BRAM while other FIFOs use 0 BRAM.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span lang=EN-US>Refer to <a href="https://www.xilinx.com/html_docs/xilinx2021_1/vitis_doc/optdirectives.html#vcb1584808314102__ad411605">Optimization Directives (xilinx.com)</a> <a href="https://www.xilinx.com/html_docs/xilinx2021_1/vitis_doc/hls_pragmas.html#chr1584844747152__ad411605">HLS Pragmas (xilinx.com)</a> <a href="https://www.xilinx.com/html_docs/xilinx2021_1/vitis_doc/configcmd.html#ptw1584807345137__ae410233">Configuration Commands (xilinx.com)</a>, I force config_storage fifo impl in Solution Settings (solution3)-&gt;General-&gt;Configuration Settings-&gt;Commands to use srl instead of autosrl in default:<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US><img border=0 width=683 height=674 style='width:7.1166in;height:7.0166in' id="图片_x0020_1" src="cid:image001.png@01D7CFD9.2E782E80"></span><span lang=EN-US><o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>Then, all FIFOs use Shift Registers. However, I upgrade the Vivado HLS project to Vitis HLS project, all the above settings remain completely same. The upgraded Vivado HLS project makes all FIFOs use Shift Registers without setting fifo impl to srl, i.e., it uses autosrl. The problem is, the two projects both using autosrl gives different results!<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span lang=EN-US>I try to use `diff` command to check the patch of their `vitis_hls.log` and `solution3.log` line by line but nothing valuable was found, except one point:<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span lang=EN-US>780c394,395<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>&lt; INFO: [HLS 200-1464] Running solution command: config_dataflow -disable_fifo_sizing_opt=1<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>---<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>&gt; INFO: [HLS 200-1464] Running solution command: config_dataflow -fifo_depth=2<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>&gt; INFO: [XFORM 203-701] Set default FIFO size in dataflow to 2.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>1063c410,411<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>&lt; INFO: [HLS 200-1510] Running: config_dataflow -default_channel fifo -scalar_fifo_depth 0 -start_fifo_depth 0<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>---<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>&gt; INFO: [HLS 200-1510] Running: config_dataflow -default_channel fifo -fifo_depth 2 -scalar_fifo_depth 0 -start_fifo_depth 0 -strict_mode warning<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>&gt; INFO: [XFORM 203-701] Set default FIFO size in dataflow to 2.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span lang=EN-US>The ONLY difference between the two files about config_dataflow is that the upgraded Vivado HLS project EXPLICITLY set -fifo_depth 2, even though it is the default setting (to explicitly set -strict_mode warning is not related to this issue)!<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>Does it possibly related to our issue?<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>The last thing I can do is to go deep into the two projects’ yuv_filter.prj/solution3/solution3.aps. Here the patch also shows the difference above.<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span lang=EN-US>8,12d7<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>&lt;&nbsp;&nbsp;&nbsp;&nbsp; &lt;synthesis askAgain=&quot;true&quot;/&gt;<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>&lt;&nbsp;&nbsp;&nbsp;&nbsp; &lt;config&gt;<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>&lt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;config_dataflow default_channel=&quot;fifo&quot; scalar_fifo_depth=&quot;0&quot; start_fifo_depth=&quot;0&quot;/&gt;<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>&lt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;config_export rtl=&quot;vhdl&quot;/&gt;<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>&lt;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/config&gt;<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>58a53,56<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &lt;config&gt;<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;config_dataflow default_channel=&quot;fifo&quot; fifo_depth=&quot;2&quot; scalar_fifo_depth=&quot;0&quot; start_fifo_depth=&quot;0&quot; strict_mode=&quot;warning&quot;/&gt;<o:p></o:p></span></p><p class=MsoNormal><span lang=FR>&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;config_export format=&quot;ip_catalog&quot; rtl=&quot;vhdl&quot;/&gt;<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>&gt;&nbsp;&nbsp;&nbsp;&nbsp; &lt;/config&gt;<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span lang=EN-US>Then, I modify Line 10 of my solution3.aps from<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;config_dataflow default_channel=&quot;fifo&quot; scalar_fifo_depth=&quot;0&quot; start_fifo_depth=&quot;0&quot;/&gt;<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>To<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; &lt;config_dataflow default_channel=&quot;fifo&quot; fifo_depth=&quot;2&quot; scalar_fifo_depth=&quot;0&quot; start_fifo_depth=&quot;0&quot;/&gt;<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span lang=EN-US>Redo C Synthesis, then it set all FIFOs to use Shift Registers, which means to explicitly set the default setting fifo_depth=”2” does lead to different behaviour, and you cannot find any differences by just looking up the GUI window of Solution Settings! I believe it is a bug of Xilinx Vitis HLS 2021.1 (more precisely, version 2021.1.1, or probably it has existed since an early version).<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span lang=EN-US>Could you please forward this bug report to Xilinx? Thanks!<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span lang=EN-US>Best regards,<o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span lang=EN-US>Yihua<o:p></o:p></span></p><div style='mso-element:para-border-div;border:none;border-bottom:solid windowtext 1.0pt;padding:0cm 0cm 1.0pt 0cm'><p class=MsoNormal style='border:none;padding:0cm'><span lang=EN-US><o:p>&nbsp;</o:p></span></p></div><p class=MsoNormal><span lang=EN-US><o:p>&nbsp;</o:p></span></p><p class=MsoNormal><span lang=EN-US>LIU Yihua </span>刘翊华<span lang=EN-US><o:p></o:p></span></p><p class=MsoNormal><span lang=EN-US>University of Michigan – Shanghai Jiao Tong University Joint Institute.<o:p></o:p></span></p></div></body></html>