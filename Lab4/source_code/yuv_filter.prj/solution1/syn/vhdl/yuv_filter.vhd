-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1.1 (64-bit)
-- Version: 2021.1.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity yuv_filter is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    in_channels_ch1_ce0 : OUT STD_LOGIC;
    in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    in_channels_ch2_ce0 : OUT STD_LOGIC;
    in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    in_channels_ch3_ce0 : OUT STD_LOGIC;
    in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_width : IN STD_LOGIC_VECTOR (15 downto 0);
    in_height : IN STD_LOGIC_VECTOR (15 downto 0);
    out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch1_ce0 : OUT STD_LOGIC;
    out_channels_ch1_we0 : OUT STD_LOGIC;
    out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch2_ce0 : OUT STD_LOGIC;
    out_channels_ch2_we0 : OUT STD_LOGIC;
    out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch3_ce0 : OUT STD_LOGIC;
    out_channels_ch3_we0 : OUT STD_LOGIC;
    out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_width : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_width_ap_vld : OUT STD_LOGIC;
    out_height : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_height_ap_vld : OUT STD_LOGIC;
    Y_scale : IN STD_LOGIC_VECTOR (7 downto 0);
    U_scale : IN STD_LOGIC_VECTOR (7 downto 0);
    V_scale : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of yuv_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "yuv_filter_yuv_filter,hls_ip_2021_1_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.651250,HLS_SYN_LAT=14125565,HLS_SYN_TPT=none,HLS_SYN_MEM=12288,HLS_SYN_DSP=0,HLS_SYN_FF=555,HLS_SYN_LUT=1356,HLS_VERSION=2021_1_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_yuv_width_reg_467 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal p_yuv_height_reg_473 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln137_fu_299_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln137_reg_479 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln138_fu_303_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln138_reg_484 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln139_fu_307_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln139_reg_489 : STD_LOGIC_VECTOR (14 downto 0);
    signal x_2_fu_319_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_2_reg_497 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln134_fu_349_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln134_reg_502 : STD_LOGIC_VECTOR (21 downto 0);
    signal icmp_ln129_fu_314_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal y_1_fu_360_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_1_reg_510 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal zext_ln134_1_fu_375_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln134_1_reg_515 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln132_fu_355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_yuv_channels_ch1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Y_reg_537 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal p_yuv_channels_ch2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal U_reg_542 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_yuv_channels_ch3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal V_reg_547 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln_reg_552 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal trunc_ln1_reg_557 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln2_reg_562 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_yuv_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_yuv_channels_ch1_ce0 : STD_LOGIC;
    signal p_yuv_channels_ch1_we0 : STD_LOGIC;
    signal p_yuv_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_yuv_channels_ch2_ce0 : STD_LOGIC;
    signal p_yuv_channels_ch2_we0 : STD_LOGIC;
    signal p_yuv_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_yuv_channels_ch3_ce0 : STD_LOGIC;
    signal p_yuv_channels_ch3_we0 : STD_LOGIC;
    signal p_scale_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_scale_channels_ch1_ce0 : STD_LOGIC;
    signal p_scale_channels_ch1_we0 : STD_LOGIC;
    signal p_scale_channels_ch1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_scale_channels_ch2_ce0 : STD_LOGIC;
    signal p_scale_channels_ch2_we0 : STD_LOGIC;
    signal p_scale_channels_ch2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_scale_channels_ch3_ce0 : STD_LOGIC;
    signal p_scale_channels_ch3_we0 : STD_LOGIC;
    signal p_scale_channels_ch3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rgb2yuv_1_fu_251_ap_start : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_251_ap_done : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_251_ap_idle : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_251_ap_ready : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_251_in_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_rgb2yuv_1_fu_251_in_channels_ch1_ce0 : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_251_in_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_rgb2yuv_1_fu_251_in_channels_ch2_ce0 : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_251_in_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_rgb2yuv_1_fu_251_in_channels_ch3_ce0 : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_251_out_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_rgb2yuv_1_fu_251_out_channels_ch1_ce0 : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_251_out_channels_ch1_we0 : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_251_out_channels_ch1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rgb2yuv_1_fu_251_out_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_rgb2yuv_1_fu_251_out_channels_ch2_ce0 : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_251_out_channels_ch2_we0 : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_251_out_channels_ch2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rgb2yuv_1_fu_251_out_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_rgb2yuv_1_fu_251_out_channels_ch3_ce0 : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_251_out_channels_ch3_we0 : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_251_out_channels_ch3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rgb2yuv_1_fu_251_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_rgb2yuv_1_fu_251_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv2rgb_1_fu_271_ap_start : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_271_ap_done : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_271_ap_idle : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_271_ap_ready : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_271_in_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv2rgb_1_fu_271_in_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_271_in_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv2rgb_1_fu_271_in_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_271_in_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv2rgb_1_fu_271_in_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_271_out_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv2rgb_1_fu_271_out_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_271_out_channels_ch1_we0 : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_271_out_channels_ch1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv2rgb_1_fu_271_out_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv2rgb_1_fu_271_out_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_271_out_channels_ch2_we0 : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_271_out_channels_ch2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv2rgb_1_fu_271_out_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv2rgb_1_fu_271_out_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_271_out_channels_ch3_we0 : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_271_out_channels_ch3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv2rgb_1_fu_271_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv2rgb_1_fu_271_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal y_reg_240 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal grp_rgb2yuv_1_fu_251_ap_start_reg : STD_LOGIC := '0';
    signal grp_yuv2rgb_1_fu_271_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal x_fu_96 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln134_fu_325_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln134_1_fu_337_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_cast_fu_329_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_1_cast_fu_341_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln134_fu_366_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln134_1_fu_370_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal mul_ln137_fu_389_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln137_fu_389_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln138_fu_397_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln138_fu_397_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln139_fu_405_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln139_fu_405_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul_ln137_fu_389_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln138_fu_397_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln139_fu_405_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal mul_ln137_fu_389_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln138_fu_397_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal mul_ln139_fu_405_p00 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component yuv_filter_rgb2yuv_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch1_ce0 : OUT STD_LOGIC;
        in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch2_ce0 : OUT STD_LOGIC;
        in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch3_ce0 : OUT STD_LOGIC;
        in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
        out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch1_ce0 : OUT STD_LOGIC;
        out_channels_ch1_we0 : OUT STD_LOGIC;
        out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch2_ce0 : OUT STD_LOGIC;
        out_channels_ch2_we0 : OUT STD_LOGIC;
        out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch3_ce0 : OUT STD_LOGIC;
        out_channels_ch3_we0 : OUT STD_LOGIC;
        out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component yuv_filter_yuv2rgb_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch1_ce0 : OUT STD_LOGIC;
        in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch2_ce0 : OUT STD_LOGIC;
        in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch3_ce0 : OUT STD_LOGIC;
        in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
        out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch1_ce0 : OUT STD_LOGIC;
        out_channels_ch1_we0 : OUT STD_LOGIC;
        out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch2_ce0 : OUT STD_LOGIC;
        out_channels_ch2_we0 : OUT STD_LOGIC;
        out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch3_ce0 : OUT STD_LOGIC;
        out_channels_ch3_we0 : OUT STD_LOGIC;
        out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component yuv_filter_mul_8ns_8ns_15_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (14 downto 0) );
    end component;


    component yuv_filter_p_yuv_channels_ch1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (21 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    p_yuv_channels_ch1_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_yuv_channels_ch1_address0,
        ce0 => p_yuv_channels_ch1_ce0,
        we0 => p_yuv_channels_ch1_we0,
        d0 => grp_rgb2yuv_1_fu_251_out_channels_ch1_d0,
        q0 => p_yuv_channels_ch1_q0);

    p_yuv_channels_ch2_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_yuv_channels_ch2_address0,
        ce0 => p_yuv_channels_ch2_ce0,
        we0 => p_yuv_channels_ch2_we0,
        d0 => grp_rgb2yuv_1_fu_251_out_channels_ch2_d0,
        q0 => p_yuv_channels_ch2_q0);

    p_yuv_channels_ch3_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_yuv_channels_ch3_address0,
        ce0 => p_yuv_channels_ch3_ce0,
        we0 => p_yuv_channels_ch3_we0,
        d0 => grp_rgb2yuv_1_fu_251_out_channels_ch3_d0,
        q0 => p_yuv_channels_ch3_q0);

    p_scale_channels_ch1_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_scale_channels_ch1_address0,
        ce0 => p_scale_channels_ch1_ce0,
        we0 => p_scale_channels_ch1_we0,
        d0 => trunc_ln_reg_552,
        q0 => p_scale_channels_ch1_q0);

    p_scale_channels_ch2_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_scale_channels_ch2_address0,
        ce0 => p_scale_channels_ch2_ce0,
        we0 => p_scale_channels_ch2_we0,
        d0 => trunc_ln1_reg_557,
        q0 => p_scale_channels_ch2_q0);

    p_scale_channels_ch3_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_scale_channels_ch3_address0,
        ce0 => p_scale_channels_ch3_ce0,
        we0 => p_scale_channels_ch3_we0,
        d0 => trunc_ln2_reg_562,
        q0 => p_scale_channels_ch3_q0);

    grp_rgb2yuv_1_fu_251 : component yuv_filter_rgb2yuv_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rgb2yuv_1_fu_251_ap_start,
        ap_done => grp_rgb2yuv_1_fu_251_ap_done,
        ap_idle => grp_rgb2yuv_1_fu_251_ap_idle,
        ap_ready => grp_rgb2yuv_1_fu_251_ap_ready,
        in_channels_ch1_address0 => grp_rgb2yuv_1_fu_251_in_channels_ch1_address0,
        in_channels_ch1_ce0 => grp_rgb2yuv_1_fu_251_in_channels_ch1_ce0,
        in_channels_ch1_q0 => in_channels_ch1_q0,
        in_channels_ch2_address0 => grp_rgb2yuv_1_fu_251_in_channels_ch2_address0,
        in_channels_ch2_ce0 => grp_rgb2yuv_1_fu_251_in_channels_ch2_ce0,
        in_channels_ch2_q0 => in_channels_ch2_q0,
        in_channels_ch3_address0 => grp_rgb2yuv_1_fu_251_in_channels_ch3_address0,
        in_channels_ch3_ce0 => grp_rgb2yuv_1_fu_251_in_channels_ch3_ce0,
        in_channels_ch3_q0 => in_channels_ch3_q0,
        p_read => in_width,
        p_read1 => in_height,
        out_channels_ch1_address0 => grp_rgb2yuv_1_fu_251_out_channels_ch1_address0,
        out_channels_ch1_ce0 => grp_rgb2yuv_1_fu_251_out_channels_ch1_ce0,
        out_channels_ch1_we0 => grp_rgb2yuv_1_fu_251_out_channels_ch1_we0,
        out_channels_ch1_d0 => grp_rgb2yuv_1_fu_251_out_channels_ch1_d0,
        out_channels_ch2_address0 => grp_rgb2yuv_1_fu_251_out_channels_ch2_address0,
        out_channels_ch2_ce0 => grp_rgb2yuv_1_fu_251_out_channels_ch2_ce0,
        out_channels_ch2_we0 => grp_rgb2yuv_1_fu_251_out_channels_ch2_we0,
        out_channels_ch2_d0 => grp_rgb2yuv_1_fu_251_out_channels_ch2_d0,
        out_channels_ch3_address0 => grp_rgb2yuv_1_fu_251_out_channels_ch3_address0,
        out_channels_ch3_ce0 => grp_rgb2yuv_1_fu_251_out_channels_ch3_ce0,
        out_channels_ch3_we0 => grp_rgb2yuv_1_fu_251_out_channels_ch3_we0,
        out_channels_ch3_d0 => grp_rgb2yuv_1_fu_251_out_channels_ch3_d0,
        ap_return_0 => grp_rgb2yuv_1_fu_251_ap_return_0,
        ap_return_1 => grp_rgb2yuv_1_fu_251_ap_return_1);

    grp_yuv2rgb_1_fu_271 : component yuv_filter_yuv2rgb_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_yuv2rgb_1_fu_271_ap_start,
        ap_done => grp_yuv2rgb_1_fu_271_ap_done,
        ap_idle => grp_yuv2rgb_1_fu_271_ap_idle,
        ap_ready => grp_yuv2rgb_1_fu_271_ap_ready,
        in_channels_ch1_address0 => grp_yuv2rgb_1_fu_271_in_channels_ch1_address0,
        in_channels_ch1_ce0 => grp_yuv2rgb_1_fu_271_in_channels_ch1_ce0,
        in_channels_ch1_q0 => p_scale_channels_ch1_q0,
        in_channels_ch2_address0 => grp_yuv2rgb_1_fu_271_in_channels_ch2_address0,
        in_channels_ch2_ce0 => grp_yuv2rgb_1_fu_271_in_channels_ch2_ce0,
        in_channels_ch2_q0 => p_scale_channels_ch2_q0,
        in_channels_ch3_address0 => grp_yuv2rgb_1_fu_271_in_channels_ch3_address0,
        in_channels_ch3_ce0 => grp_yuv2rgb_1_fu_271_in_channels_ch3_ce0,
        in_channels_ch3_q0 => p_scale_channels_ch3_q0,
        p_read => p_yuv_width_reg_467,
        p_read1 => p_yuv_height_reg_473,
        out_channels_ch1_address0 => grp_yuv2rgb_1_fu_271_out_channels_ch1_address0,
        out_channels_ch1_ce0 => grp_yuv2rgb_1_fu_271_out_channels_ch1_ce0,
        out_channels_ch1_we0 => grp_yuv2rgb_1_fu_271_out_channels_ch1_we0,
        out_channels_ch1_d0 => grp_yuv2rgb_1_fu_271_out_channels_ch1_d0,
        out_channels_ch2_address0 => grp_yuv2rgb_1_fu_271_out_channels_ch2_address0,
        out_channels_ch2_ce0 => grp_yuv2rgb_1_fu_271_out_channels_ch2_ce0,
        out_channels_ch2_we0 => grp_yuv2rgb_1_fu_271_out_channels_ch2_we0,
        out_channels_ch2_d0 => grp_yuv2rgb_1_fu_271_out_channels_ch2_d0,
        out_channels_ch3_address0 => grp_yuv2rgb_1_fu_271_out_channels_ch3_address0,
        out_channels_ch3_ce0 => grp_yuv2rgb_1_fu_271_out_channels_ch3_ce0,
        out_channels_ch3_we0 => grp_yuv2rgb_1_fu_271_out_channels_ch3_we0,
        out_channels_ch3_d0 => grp_yuv2rgb_1_fu_271_out_channels_ch3_d0,
        ap_return_0 => grp_yuv2rgb_1_fu_271_ap_return_0,
        ap_return_1 => grp_yuv2rgb_1_fu_271_ap_return_1);

    mul_8ns_8ns_15_1_1_U34 : component yuv_filter_mul_8ns_8ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln137_fu_389_p0,
        din1 => mul_ln137_fu_389_p1,
        dout => mul_ln137_fu_389_p2);

    mul_8ns_8ns_15_1_1_U35 : component yuv_filter_mul_8ns_8ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln138_fu_397_p0,
        din1 => mul_ln138_fu_397_p1,
        dout => mul_ln138_fu_397_p2);

    mul_8ns_8ns_15_1_1_U36 : component yuv_filter_mul_8ns_8ns_15_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 15)
    port map (
        din0 => mul_ln139_fu_405_p0,
        din1 => mul_ln139_fu_405_p1,
        dout => mul_ln139_fu_405_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_rgb2yuv_1_fu_251_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rgb2yuv_1_fu_251_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_rgb2yuv_1_fu_251_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rgb2yuv_1_fu_251_ap_ready = ap_const_logic_1)) then 
                    grp_rgb2yuv_1_fu_251_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_yuv2rgb_1_fu_271_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_yuv2rgb_1_fu_271_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln129_fu_314_p2 = ap_const_lv1_1))) then 
                    grp_yuv2rgb_1_fu_271_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_yuv2rgb_1_fu_271_ap_ready = ap_const_logic_1)) then 
                    grp_yuv2rgb_1_fu_271_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    x_fu_96_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                x_fu_96 <= ap_const_lv16_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln132_fu_355_p2 = ap_const_lv1_1))) then 
                x_fu_96 <= x_2_reg_497;
            end if; 
        end if;
    end process;

    y_reg_240_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                y_reg_240 <= y_1_reg_510;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln129_fu_314_p2 = ap_const_lv1_0))) then 
                y_reg_240 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                U_reg_542 <= p_yuv_channels_ch2_q0;
                V_reg_547 <= p_yuv_channels_ch3_q0;
                Y_reg_537 <= p_yuv_channels_ch1_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln129_fu_314_p2 = ap_const_lv1_0))) then
                    add_ln134_reg_502(21 downto 8) <= add_ln134_fu_349_p2(21 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                p_yuv_height_reg_473 <= grp_rgb2yuv_1_fu_251_ap_return_1;
                p_yuv_width_reg_467 <= grp_rgb2yuv_1_fu_251_ap_return_0;
                    zext_ln137_reg_479(7 downto 0) <= zext_ln137_fu_299_p1(7 downto 0);
                    zext_ln138_reg_484(7 downto 0) <= zext_ln138_fu_303_p1(7 downto 0);
                    zext_ln139_reg_489(7 downto 0) <= zext_ln139_fu_307_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                trunc_ln1_reg_557 <= mul_ln138_fu_397_p2(14 downto 7);
                trunc_ln2_reg_562 <= mul_ln139_fu_405_p2(14 downto 7);
                trunc_ln_reg_552 <= mul_ln137_fu_389_p2(14 downto 7);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                x_2_reg_497 <= x_2_fu_319_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                y_1_reg_510 <= y_1_fu_360_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln132_fu_355_p2 = ap_const_lv1_0))) then
                    zext_ln134_1_reg_515(21 downto 0) <= zext_ln134_1_fu_375_p1(21 downto 0);
            end if;
        end if;
    end process;
    zext_ln137_reg_479(14 downto 8) <= "0000000";
    zext_ln138_reg_484(14 downto 8) <= "0000000";
    zext_ln139_reg_489(14 downto 8) <= "0000000";
    add_ln134_reg_502(7 downto 0) <= "00000000";
    zext_ln134_1_reg_515(63 downto 22) <= "000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state3, icmp_ln129_fu_314_p2, ap_CS_fsm_state4, icmp_ln132_fu_355_p2, grp_rgb2yuv_1_fu_251_ap_done, grp_yuv2rgb_1_fu_271_ap_done, ap_CS_fsm_state8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_rgb2yuv_1_fu_251_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln129_fu_314_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln132_fu_355_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state8 => 
                if (((grp_yuv2rgb_1_fu_271_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln134_1_fu_370_p2 <= std_logic_vector(unsigned(add_ln134_reg_502) + unsigned(zext_ln134_fu_366_p1));
    add_ln134_fu_349_p2 <= std_logic_vector(unsigned(tmp_cast_fu_329_p3) + unsigned(tmp_1_cast_fu_341_p3));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_rgb2yuv_1_fu_251_ap_done)
    begin
        if ((grp_rgb2yuv_1_fu_251_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_yuv2rgb_1_fu_271_ap_done)
    begin
        if ((grp_yuv2rgb_1_fu_271_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_yuv2rgb_1_fu_271_ap_done, ap_CS_fsm_state8)
    begin
        if (((grp_yuv2rgb_1_fu_271_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_yuv2rgb_1_fu_271_ap_done, ap_CS_fsm_state8)
    begin
        if (((grp_yuv2rgb_1_fu_271_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_rgb2yuv_1_fu_251_ap_start <= grp_rgb2yuv_1_fu_251_ap_start_reg;
    grp_yuv2rgb_1_fu_271_ap_start <= grp_yuv2rgb_1_fu_271_ap_start_reg;
    icmp_ln129_fu_314_p2 <= "1" when (x_fu_96 = p_yuv_width_reg_467) else "0";
    icmp_ln132_fu_355_p2 <= "1" when (y_reg_240 = p_yuv_height_reg_473) else "0";
    in_channels_ch1_address0 <= grp_rgb2yuv_1_fu_251_in_channels_ch1_address0;
    in_channels_ch1_ce0 <= grp_rgb2yuv_1_fu_251_in_channels_ch1_ce0;
    in_channels_ch2_address0 <= grp_rgb2yuv_1_fu_251_in_channels_ch2_address0;
    in_channels_ch2_ce0 <= grp_rgb2yuv_1_fu_251_in_channels_ch2_ce0;
    in_channels_ch3_address0 <= grp_rgb2yuv_1_fu_251_in_channels_ch3_address0;
    in_channels_ch3_ce0 <= grp_rgb2yuv_1_fu_251_in_channels_ch3_ce0;
    mul_ln137_fu_389_p0 <= mul_ln137_fu_389_p00(8 - 1 downto 0);
    mul_ln137_fu_389_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Y_reg_537),15));
    mul_ln137_fu_389_p1 <= zext_ln137_reg_479(8 - 1 downto 0);
    mul_ln138_fu_397_p0 <= mul_ln138_fu_397_p00(8 - 1 downto 0);
    mul_ln138_fu_397_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(U_reg_542),15));
    mul_ln138_fu_397_p1 <= zext_ln138_reg_484(8 - 1 downto 0);
    mul_ln139_fu_405_p0 <= mul_ln139_fu_405_p00(8 - 1 downto 0);
    mul_ln139_fu_405_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(V_reg_547),15));
    mul_ln139_fu_405_p1 <= zext_ln139_reg_489(8 - 1 downto 0);
    out_channels_ch1_address0 <= grp_yuv2rgb_1_fu_271_out_channels_ch1_address0;
    out_channels_ch1_ce0 <= grp_yuv2rgb_1_fu_271_out_channels_ch1_ce0;
    out_channels_ch1_d0 <= grp_yuv2rgb_1_fu_271_out_channels_ch1_d0;
    out_channels_ch1_we0 <= grp_yuv2rgb_1_fu_271_out_channels_ch1_we0;
    out_channels_ch2_address0 <= grp_yuv2rgb_1_fu_271_out_channels_ch2_address0;
    out_channels_ch2_ce0 <= grp_yuv2rgb_1_fu_271_out_channels_ch2_ce0;
    out_channels_ch2_d0 <= grp_yuv2rgb_1_fu_271_out_channels_ch2_d0;
    out_channels_ch2_we0 <= grp_yuv2rgb_1_fu_271_out_channels_ch2_we0;
    out_channels_ch3_address0 <= grp_yuv2rgb_1_fu_271_out_channels_ch3_address0;
    out_channels_ch3_ce0 <= grp_yuv2rgb_1_fu_271_out_channels_ch3_ce0;
    out_channels_ch3_d0 <= grp_yuv2rgb_1_fu_271_out_channels_ch3_d0;
    out_channels_ch3_we0 <= grp_yuv2rgb_1_fu_271_out_channels_ch3_we0;
    out_height <= grp_yuv2rgb_1_fu_271_ap_return_1;

    out_height_ap_vld_assign_proc : process(grp_yuv2rgb_1_fu_271_ap_done, ap_CS_fsm_state8)
    begin
        if (((grp_yuv2rgb_1_fu_271_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            out_height_ap_vld <= ap_const_logic_1;
        else 
            out_height_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_width <= grp_yuv2rgb_1_fu_271_ap_return_0;

    out_width_ap_vld_assign_proc : process(grp_yuv2rgb_1_fu_271_ap_done, ap_CS_fsm_state8)
    begin
        if (((grp_yuv2rgb_1_fu_271_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            out_width_ap_vld <= ap_const_logic_1;
        else 
            out_width_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch1_address0_assign_proc : process(zext_ln134_1_reg_515, grp_yuv2rgb_1_fu_271_in_channels_ch1_address0, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            p_scale_channels_ch1_address0 <= zext_ln134_1_reg_515(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_scale_channels_ch1_address0 <= grp_yuv2rgb_1_fu_271_in_channels_ch1_address0;
        else 
            p_scale_channels_ch1_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_scale_channels_ch1_ce0_assign_proc : process(grp_yuv2rgb_1_fu_271_in_channels_ch1_ce0, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            p_scale_channels_ch1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_scale_channels_ch1_ce0 <= grp_yuv2rgb_1_fu_271_in_channels_ch1_ce0;
        else 
            p_scale_channels_ch1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch1_we0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            p_scale_channels_ch1_we0 <= ap_const_logic_1;
        else 
            p_scale_channels_ch1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch2_address0_assign_proc : process(zext_ln134_1_reg_515, grp_yuv2rgb_1_fu_271_in_channels_ch2_address0, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            p_scale_channels_ch2_address0 <= zext_ln134_1_reg_515(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_scale_channels_ch2_address0 <= grp_yuv2rgb_1_fu_271_in_channels_ch2_address0;
        else 
            p_scale_channels_ch2_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_scale_channels_ch2_ce0_assign_proc : process(grp_yuv2rgb_1_fu_271_in_channels_ch2_ce0, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            p_scale_channels_ch2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_scale_channels_ch2_ce0 <= grp_yuv2rgb_1_fu_271_in_channels_ch2_ce0;
        else 
            p_scale_channels_ch2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch2_we0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            p_scale_channels_ch2_we0 <= ap_const_logic_1;
        else 
            p_scale_channels_ch2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch3_address0_assign_proc : process(zext_ln134_1_reg_515, grp_yuv2rgb_1_fu_271_in_channels_ch3_address0, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            p_scale_channels_ch3_address0 <= zext_ln134_1_reg_515(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_scale_channels_ch3_address0 <= grp_yuv2rgb_1_fu_271_in_channels_ch3_address0;
        else 
            p_scale_channels_ch3_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_scale_channels_ch3_ce0_assign_proc : process(grp_yuv2rgb_1_fu_271_in_channels_ch3_ce0, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            p_scale_channels_ch3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            p_scale_channels_ch3_ce0 <= grp_yuv2rgb_1_fu_271_in_channels_ch3_ce0;
        else 
            p_scale_channels_ch3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch3_we0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            p_scale_channels_ch3_we0 <= ap_const_logic_1;
        else 
            p_scale_channels_ch3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch1_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, zext_ln134_1_fu_375_p1, grp_rgb2yuv_1_fu_251_out_channels_ch1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_yuv_channels_ch1_address0 <= zext_ln134_1_fu_375_p1(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch1_address0 <= grp_rgb2yuv_1_fu_251_out_channels_ch1_address0;
        else 
            p_yuv_channels_ch1_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_yuv_channels_ch1_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, grp_rgb2yuv_1_fu_251_out_channels_ch1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_yuv_channels_ch1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch1_ce0 <= grp_rgb2yuv_1_fu_251_out_channels_ch1_ce0;
        else 
            p_yuv_channels_ch1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch1_we0_assign_proc : process(ap_CS_fsm_state2, grp_rgb2yuv_1_fu_251_out_channels_ch1_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch1_we0 <= grp_rgb2yuv_1_fu_251_out_channels_ch1_we0;
        else 
            p_yuv_channels_ch1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch2_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, zext_ln134_1_fu_375_p1, grp_rgb2yuv_1_fu_251_out_channels_ch2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_yuv_channels_ch2_address0 <= zext_ln134_1_fu_375_p1(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch2_address0 <= grp_rgb2yuv_1_fu_251_out_channels_ch2_address0;
        else 
            p_yuv_channels_ch2_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_yuv_channels_ch2_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, grp_rgb2yuv_1_fu_251_out_channels_ch2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_yuv_channels_ch2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch2_ce0 <= grp_rgb2yuv_1_fu_251_out_channels_ch2_ce0;
        else 
            p_yuv_channels_ch2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch2_we0_assign_proc : process(ap_CS_fsm_state2, grp_rgb2yuv_1_fu_251_out_channels_ch2_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch2_we0 <= grp_rgb2yuv_1_fu_251_out_channels_ch2_we0;
        else 
            p_yuv_channels_ch2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch3_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, zext_ln134_1_fu_375_p1, grp_rgb2yuv_1_fu_251_out_channels_ch3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_yuv_channels_ch3_address0 <= zext_ln134_1_fu_375_p1(22 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch3_address0 <= grp_rgb2yuv_1_fu_251_out_channels_ch3_address0;
        else 
            p_yuv_channels_ch3_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_yuv_channels_ch3_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, grp_rgb2yuv_1_fu_251_out_channels_ch3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_yuv_channels_ch3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch3_ce0 <= grp_rgb2yuv_1_fu_251_out_channels_ch3_ce0;
        else 
            p_yuv_channels_ch3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch3_we0_assign_proc : process(ap_CS_fsm_state2, grp_rgb2yuv_1_fu_251_out_channels_ch3_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch3_we0 <= grp_rgb2yuv_1_fu_251_out_channels_ch3_we0;
        else 
            p_yuv_channels_ch3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_cast_fu_341_p3 <= (trunc_ln134_1_fu_337_p1 & ap_const_lv8_0);
    tmp_cast_fu_329_p3 <= (trunc_ln134_fu_325_p1 & ap_const_lv10_0);
    trunc_ln134_1_fu_337_p1 <= x_fu_96(14 - 1 downto 0);
    trunc_ln134_fu_325_p1 <= x_fu_96(12 - 1 downto 0);
    x_2_fu_319_p2 <= std_logic_vector(unsigned(x_fu_96) + unsigned(ap_const_lv16_1));
    y_1_fu_360_p2 <= std_logic_vector(unsigned(y_reg_240) + unsigned(ap_const_lv16_1));
    zext_ln134_1_fu_375_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln134_1_fu_370_p2),64));
    zext_ln134_fu_366_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_reg_240),22));
    zext_ln137_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Y_scale),15));
    zext_ln138_fu_303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(U_scale),15));
    zext_ln139_fu_307_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(V_scale),15));
end behav;
