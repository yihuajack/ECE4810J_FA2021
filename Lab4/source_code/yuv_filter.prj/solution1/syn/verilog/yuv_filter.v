// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1.1 (64-bit)
// Version: 2021.1.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="yuv_filter_yuv_filter,hls_ip_2021_1_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.651250,HLS_SYN_LAT=14125565,HLS_SYN_TPT=none,HLS_SYN_MEM=12288,HLS_SYN_DSP=0,HLS_SYN_FF=555,HLS_SYN_LUT=1356,HLS_VERSION=2021_1_1}" *)

module yuv_filter (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        in_channels_ch1_address0,
        in_channels_ch1_ce0,
        in_channels_ch1_q0,
        in_channels_ch2_address0,
        in_channels_ch2_ce0,
        in_channels_ch2_q0,
        in_channels_ch3_address0,
        in_channels_ch3_ce0,
        in_channels_ch3_q0,
        in_width,
        in_height,
        out_channels_ch1_address0,
        out_channels_ch1_ce0,
        out_channels_ch1_we0,
        out_channels_ch1_d0,
        out_channels_ch2_address0,
        out_channels_ch2_ce0,
        out_channels_ch2_we0,
        out_channels_ch2_d0,
        out_channels_ch3_address0,
        out_channels_ch3_ce0,
        out_channels_ch3_we0,
        out_channels_ch3_d0,
        out_width,
        out_width_ap_vld,
        out_height,
        out_height_ap_vld,
        Y_scale,
        U_scale,
        V_scale
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_state6 = 8'd32;
parameter    ap_ST_fsm_state7 = 8'd64;
parameter    ap_ST_fsm_state8 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [21:0] in_channels_ch1_address0;
output   in_channels_ch1_ce0;
input  [7:0] in_channels_ch1_q0;
output  [21:0] in_channels_ch2_address0;
output   in_channels_ch2_ce0;
input  [7:0] in_channels_ch2_q0;
output  [21:0] in_channels_ch3_address0;
output   in_channels_ch3_ce0;
input  [7:0] in_channels_ch3_q0;
input  [15:0] in_width;
input  [15:0] in_height;
output  [21:0] out_channels_ch1_address0;
output   out_channels_ch1_ce0;
output   out_channels_ch1_we0;
output  [7:0] out_channels_ch1_d0;
output  [21:0] out_channels_ch2_address0;
output   out_channels_ch2_ce0;
output   out_channels_ch2_we0;
output  [7:0] out_channels_ch2_d0;
output  [21:0] out_channels_ch3_address0;
output   out_channels_ch3_ce0;
output   out_channels_ch3_we0;
output  [7:0] out_channels_ch3_d0;
output  [15:0] out_width;
output   out_width_ap_vld;
output  [15:0] out_height;
output   out_height_ap_vld;
input  [7:0] Y_scale;
input  [7:0] U_scale;
input  [7:0] V_scale;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg out_width_ap_vld;
reg out_height_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [15:0] p_yuv_width_reg_467;
wire    ap_CS_fsm_state2;
reg   [15:0] p_yuv_height_reg_473;
wire   [14:0] zext_ln137_fu_299_p1;
reg   [14:0] zext_ln137_reg_479;
wire   [14:0] zext_ln138_fu_303_p1;
reg   [14:0] zext_ln138_reg_484;
wire   [14:0] zext_ln139_fu_307_p1;
reg   [14:0] zext_ln139_reg_489;
wire   [15:0] x_2_fu_319_p2;
reg   [15:0] x_2_reg_497;
wire    ap_CS_fsm_state3;
wire   [21:0] add_ln134_fu_349_p2;
reg   [21:0] add_ln134_reg_502;
wire   [0:0] icmp_ln129_fu_314_p2;
wire   [15:0] y_1_fu_360_p2;
reg   [15:0] y_1_reg_510;
wire    ap_CS_fsm_state4;
wire   [63:0] zext_ln134_1_fu_375_p1;
reg   [63:0] zext_ln134_1_reg_515;
wire   [0:0] icmp_ln132_fu_355_p2;
wire   [7:0] p_yuv_channels_ch1_q0;
reg   [7:0] Y_reg_537;
wire    ap_CS_fsm_state5;
wire   [7:0] p_yuv_channels_ch2_q0;
reg   [7:0] U_reg_542;
wire   [7:0] p_yuv_channels_ch3_q0;
reg   [7:0] V_reg_547;
reg   [7:0] trunc_ln_reg_552;
wire    ap_CS_fsm_state6;
reg   [7:0] trunc_ln1_reg_557;
reg   [7:0] trunc_ln2_reg_562;
reg   [21:0] p_yuv_channels_ch1_address0;
reg    p_yuv_channels_ch1_ce0;
reg    p_yuv_channels_ch1_we0;
reg   [21:0] p_yuv_channels_ch2_address0;
reg    p_yuv_channels_ch2_ce0;
reg    p_yuv_channels_ch2_we0;
reg   [21:0] p_yuv_channels_ch3_address0;
reg    p_yuv_channels_ch3_ce0;
reg    p_yuv_channels_ch3_we0;
reg   [21:0] p_scale_channels_ch1_address0;
reg    p_scale_channels_ch1_ce0;
reg    p_scale_channels_ch1_we0;
wire   [7:0] p_scale_channels_ch1_q0;
reg   [21:0] p_scale_channels_ch2_address0;
reg    p_scale_channels_ch2_ce0;
reg    p_scale_channels_ch2_we0;
wire   [7:0] p_scale_channels_ch2_q0;
reg   [21:0] p_scale_channels_ch3_address0;
reg    p_scale_channels_ch3_ce0;
reg    p_scale_channels_ch3_we0;
wire   [7:0] p_scale_channels_ch3_q0;
wire    grp_rgb2yuv_1_fu_251_ap_start;
wire    grp_rgb2yuv_1_fu_251_ap_done;
wire    grp_rgb2yuv_1_fu_251_ap_idle;
wire    grp_rgb2yuv_1_fu_251_ap_ready;
wire   [21:0] grp_rgb2yuv_1_fu_251_in_channels_ch1_address0;
wire    grp_rgb2yuv_1_fu_251_in_channels_ch1_ce0;
wire   [21:0] grp_rgb2yuv_1_fu_251_in_channels_ch2_address0;
wire    grp_rgb2yuv_1_fu_251_in_channels_ch2_ce0;
wire   [21:0] grp_rgb2yuv_1_fu_251_in_channels_ch3_address0;
wire    grp_rgb2yuv_1_fu_251_in_channels_ch3_ce0;
wire   [21:0] grp_rgb2yuv_1_fu_251_out_channels_ch1_address0;
wire    grp_rgb2yuv_1_fu_251_out_channels_ch1_ce0;
wire    grp_rgb2yuv_1_fu_251_out_channels_ch1_we0;
wire   [7:0] grp_rgb2yuv_1_fu_251_out_channels_ch1_d0;
wire   [21:0] grp_rgb2yuv_1_fu_251_out_channels_ch2_address0;
wire    grp_rgb2yuv_1_fu_251_out_channels_ch2_ce0;
wire    grp_rgb2yuv_1_fu_251_out_channels_ch2_we0;
wire   [7:0] grp_rgb2yuv_1_fu_251_out_channels_ch2_d0;
wire   [21:0] grp_rgb2yuv_1_fu_251_out_channels_ch3_address0;
wire    grp_rgb2yuv_1_fu_251_out_channels_ch3_ce0;
wire    grp_rgb2yuv_1_fu_251_out_channels_ch3_we0;
wire   [7:0] grp_rgb2yuv_1_fu_251_out_channels_ch3_d0;
wire   [15:0] grp_rgb2yuv_1_fu_251_ap_return_0;
wire   [15:0] grp_rgb2yuv_1_fu_251_ap_return_1;
wire    grp_yuv2rgb_1_fu_271_ap_start;
wire    grp_yuv2rgb_1_fu_271_ap_done;
wire    grp_yuv2rgb_1_fu_271_ap_idle;
wire    grp_yuv2rgb_1_fu_271_ap_ready;
wire   [21:0] grp_yuv2rgb_1_fu_271_in_channels_ch1_address0;
wire    grp_yuv2rgb_1_fu_271_in_channels_ch1_ce0;
wire   [21:0] grp_yuv2rgb_1_fu_271_in_channels_ch2_address0;
wire    grp_yuv2rgb_1_fu_271_in_channels_ch2_ce0;
wire   [21:0] grp_yuv2rgb_1_fu_271_in_channels_ch3_address0;
wire    grp_yuv2rgb_1_fu_271_in_channels_ch3_ce0;
wire   [21:0] grp_yuv2rgb_1_fu_271_out_channels_ch1_address0;
wire    grp_yuv2rgb_1_fu_271_out_channels_ch1_ce0;
wire    grp_yuv2rgb_1_fu_271_out_channels_ch1_we0;
wire   [7:0] grp_yuv2rgb_1_fu_271_out_channels_ch1_d0;
wire   [21:0] grp_yuv2rgb_1_fu_271_out_channels_ch2_address0;
wire    grp_yuv2rgb_1_fu_271_out_channels_ch2_ce0;
wire    grp_yuv2rgb_1_fu_271_out_channels_ch2_we0;
wire   [7:0] grp_yuv2rgb_1_fu_271_out_channels_ch2_d0;
wire   [21:0] grp_yuv2rgb_1_fu_271_out_channels_ch3_address0;
wire    grp_yuv2rgb_1_fu_271_out_channels_ch3_ce0;
wire    grp_yuv2rgb_1_fu_271_out_channels_ch3_we0;
wire   [7:0] grp_yuv2rgb_1_fu_271_out_channels_ch3_d0;
wire   [15:0] grp_yuv2rgb_1_fu_271_ap_return_0;
wire   [15:0] grp_yuv2rgb_1_fu_271_ap_return_1;
reg   [15:0] y_reg_240;
wire    ap_CS_fsm_state7;
reg    grp_rgb2yuv_1_fu_251_ap_start_reg;
reg    grp_yuv2rgb_1_fu_271_ap_start_reg;
wire    ap_CS_fsm_state8;
reg   [15:0] x_fu_96;
wire   [11:0] trunc_ln134_fu_325_p1;
wire   [13:0] trunc_ln134_1_fu_337_p1;
wire   [21:0] tmp_cast_fu_329_p3;
wire   [21:0] tmp_1_cast_fu_341_p3;
wire   [21:0] zext_ln134_fu_366_p1;
wire   [21:0] add_ln134_1_fu_370_p2;
wire   [7:0] mul_ln137_fu_389_p0;
wire   [7:0] mul_ln137_fu_389_p1;
wire   [7:0] mul_ln138_fu_397_p0;
wire   [7:0] mul_ln138_fu_397_p1;
wire   [7:0] mul_ln139_fu_405_p0;
wire   [7:0] mul_ln139_fu_405_p1;
wire   [14:0] mul_ln137_fu_389_p2;
wire   [14:0] mul_ln138_fu_397_p2;
wire   [14:0] mul_ln139_fu_405_p2;
reg   [7:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire   [14:0] mul_ln137_fu_389_p00;
wire   [14:0] mul_ln138_fu_397_p00;
wire   [14:0] mul_ln139_fu_405_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 grp_rgb2yuv_1_fu_251_ap_start_reg = 1'b0;
#0 grp_yuv2rgb_1_fu_271_ap_start_reg = 1'b0;
end

yuv_filter_p_yuv_channels_ch1 #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_yuv_channels_ch1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_yuv_channels_ch1_address0),
    .ce0(p_yuv_channels_ch1_ce0),
    .we0(p_yuv_channels_ch1_we0),
    .d0(grp_rgb2yuv_1_fu_251_out_channels_ch1_d0),
    .q0(p_yuv_channels_ch1_q0)
);

yuv_filter_p_yuv_channels_ch1 #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_yuv_channels_ch2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_yuv_channels_ch2_address0),
    .ce0(p_yuv_channels_ch2_ce0),
    .we0(p_yuv_channels_ch2_we0),
    .d0(grp_rgb2yuv_1_fu_251_out_channels_ch2_d0),
    .q0(p_yuv_channels_ch2_q0)
);

yuv_filter_p_yuv_channels_ch1 #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_yuv_channels_ch3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_yuv_channels_ch3_address0),
    .ce0(p_yuv_channels_ch3_ce0),
    .we0(p_yuv_channels_ch3_we0),
    .d0(grp_rgb2yuv_1_fu_251_out_channels_ch3_d0),
    .q0(p_yuv_channels_ch3_q0)
);

yuv_filter_p_yuv_channels_ch1 #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_scale_channels_ch1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_scale_channels_ch1_address0),
    .ce0(p_scale_channels_ch1_ce0),
    .we0(p_scale_channels_ch1_we0),
    .d0(trunc_ln_reg_552),
    .q0(p_scale_channels_ch1_q0)
);

yuv_filter_p_yuv_channels_ch1 #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_scale_channels_ch2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_scale_channels_ch2_address0),
    .ce0(p_scale_channels_ch2_ce0),
    .we0(p_scale_channels_ch2_we0),
    .d0(trunc_ln1_reg_557),
    .q0(p_scale_channels_ch2_q0)
);

yuv_filter_p_yuv_channels_ch1 #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_scale_channels_ch3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_scale_channels_ch3_address0),
    .ce0(p_scale_channels_ch3_ce0),
    .we0(p_scale_channels_ch3_we0),
    .d0(trunc_ln2_reg_562),
    .q0(p_scale_channels_ch3_q0)
);

yuv_filter_rgb2yuv_1 grp_rgb2yuv_1_fu_251(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rgb2yuv_1_fu_251_ap_start),
    .ap_done(grp_rgb2yuv_1_fu_251_ap_done),
    .ap_idle(grp_rgb2yuv_1_fu_251_ap_idle),
    .ap_ready(grp_rgb2yuv_1_fu_251_ap_ready),
    .in_channels_ch1_address0(grp_rgb2yuv_1_fu_251_in_channels_ch1_address0),
    .in_channels_ch1_ce0(grp_rgb2yuv_1_fu_251_in_channels_ch1_ce0),
    .in_channels_ch1_q0(in_channels_ch1_q0),
    .in_channels_ch2_address0(grp_rgb2yuv_1_fu_251_in_channels_ch2_address0),
    .in_channels_ch2_ce0(grp_rgb2yuv_1_fu_251_in_channels_ch2_ce0),
    .in_channels_ch2_q0(in_channels_ch2_q0),
    .in_channels_ch3_address0(grp_rgb2yuv_1_fu_251_in_channels_ch3_address0),
    .in_channels_ch3_ce0(grp_rgb2yuv_1_fu_251_in_channels_ch3_ce0),
    .in_channels_ch3_q0(in_channels_ch3_q0),
    .p_read(in_width),
    .p_read1(in_height),
    .out_channels_ch1_address0(grp_rgb2yuv_1_fu_251_out_channels_ch1_address0),
    .out_channels_ch1_ce0(grp_rgb2yuv_1_fu_251_out_channels_ch1_ce0),
    .out_channels_ch1_we0(grp_rgb2yuv_1_fu_251_out_channels_ch1_we0),
    .out_channels_ch1_d0(grp_rgb2yuv_1_fu_251_out_channels_ch1_d0),
    .out_channels_ch2_address0(grp_rgb2yuv_1_fu_251_out_channels_ch2_address0),
    .out_channels_ch2_ce0(grp_rgb2yuv_1_fu_251_out_channels_ch2_ce0),
    .out_channels_ch2_we0(grp_rgb2yuv_1_fu_251_out_channels_ch2_we0),
    .out_channels_ch2_d0(grp_rgb2yuv_1_fu_251_out_channels_ch2_d0),
    .out_channels_ch3_address0(grp_rgb2yuv_1_fu_251_out_channels_ch3_address0),
    .out_channels_ch3_ce0(grp_rgb2yuv_1_fu_251_out_channels_ch3_ce0),
    .out_channels_ch3_we0(grp_rgb2yuv_1_fu_251_out_channels_ch3_we0),
    .out_channels_ch3_d0(grp_rgb2yuv_1_fu_251_out_channels_ch3_d0),
    .ap_return_0(grp_rgb2yuv_1_fu_251_ap_return_0),
    .ap_return_1(grp_rgb2yuv_1_fu_251_ap_return_1)
);

yuv_filter_yuv2rgb_1 grp_yuv2rgb_1_fu_271(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_yuv2rgb_1_fu_271_ap_start),
    .ap_done(grp_yuv2rgb_1_fu_271_ap_done),
    .ap_idle(grp_yuv2rgb_1_fu_271_ap_idle),
    .ap_ready(grp_yuv2rgb_1_fu_271_ap_ready),
    .in_channels_ch1_address0(grp_yuv2rgb_1_fu_271_in_channels_ch1_address0),
    .in_channels_ch1_ce0(grp_yuv2rgb_1_fu_271_in_channels_ch1_ce0),
    .in_channels_ch1_q0(p_scale_channels_ch1_q0),
    .in_channels_ch2_address0(grp_yuv2rgb_1_fu_271_in_channels_ch2_address0),
    .in_channels_ch2_ce0(grp_yuv2rgb_1_fu_271_in_channels_ch2_ce0),
    .in_channels_ch2_q0(p_scale_channels_ch2_q0),
    .in_channels_ch3_address0(grp_yuv2rgb_1_fu_271_in_channels_ch3_address0),
    .in_channels_ch3_ce0(grp_yuv2rgb_1_fu_271_in_channels_ch3_ce0),
    .in_channels_ch3_q0(p_scale_channels_ch3_q0),
    .p_read(p_yuv_width_reg_467),
    .p_read1(p_yuv_height_reg_473),
    .out_channels_ch1_address0(grp_yuv2rgb_1_fu_271_out_channels_ch1_address0),
    .out_channels_ch1_ce0(grp_yuv2rgb_1_fu_271_out_channels_ch1_ce0),
    .out_channels_ch1_we0(grp_yuv2rgb_1_fu_271_out_channels_ch1_we0),
    .out_channels_ch1_d0(grp_yuv2rgb_1_fu_271_out_channels_ch1_d0),
    .out_channels_ch2_address0(grp_yuv2rgb_1_fu_271_out_channels_ch2_address0),
    .out_channels_ch2_ce0(grp_yuv2rgb_1_fu_271_out_channels_ch2_ce0),
    .out_channels_ch2_we0(grp_yuv2rgb_1_fu_271_out_channels_ch2_we0),
    .out_channels_ch2_d0(grp_yuv2rgb_1_fu_271_out_channels_ch2_d0),
    .out_channels_ch3_address0(grp_yuv2rgb_1_fu_271_out_channels_ch3_address0),
    .out_channels_ch3_ce0(grp_yuv2rgb_1_fu_271_out_channels_ch3_ce0),
    .out_channels_ch3_we0(grp_yuv2rgb_1_fu_271_out_channels_ch3_we0),
    .out_channels_ch3_d0(grp_yuv2rgb_1_fu_271_out_channels_ch3_d0),
    .ap_return_0(grp_yuv2rgb_1_fu_271_ap_return_0),
    .ap_return_1(grp_yuv2rgb_1_fu_271_ap_return_1)
);

yuv_filter_mul_8ns_8ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 15 ))
mul_8ns_8ns_15_1_1_U34(
    .din0(mul_ln137_fu_389_p0),
    .din1(mul_ln137_fu_389_p1),
    .dout(mul_ln137_fu_389_p2)
);

yuv_filter_mul_8ns_8ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 15 ))
mul_8ns_8ns_15_1_1_U35(
    .din0(mul_ln138_fu_397_p0),
    .din1(mul_ln138_fu_397_p1),
    .dout(mul_ln138_fu_397_p2)
);

yuv_filter_mul_8ns_8ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 15 ))
mul_8ns_8ns_15_1_1_U36(
    .din0(mul_ln139_fu_405_p0),
    .din1(mul_ln139_fu_405_p1),
    .dout(mul_ln139_fu_405_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rgb2yuv_1_fu_251_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_rgb2yuv_1_fu_251_ap_start_reg <= 1'b1;
        end else if ((grp_rgb2yuv_1_fu_251_ap_ready == 1'b1)) begin
            grp_rgb2yuv_1_fu_251_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_yuv2rgb_1_fu_271_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln129_fu_314_p2 == 1'd1))) begin
            grp_yuv2rgb_1_fu_271_ap_start_reg <= 1'b1;
        end else if ((grp_yuv2rgb_1_fu_271_ap_ready == 1'b1)) begin
            grp_yuv2rgb_1_fu_271_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        x_fu_96 <= 16'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln132_fu_355_p2 == 1'd1))) begin
        x_fu_96 <= x_2_reg_497;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        y_reg_240 <= y_1_reg_510;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln129_fu_314_p2 == 1'd0))) begin
        y_reg_240 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        U_reg_542 <= p_yuv_channels_ch2_q0;
        V_reg_547 <= p_yuv_channels_ch3_q0;
        Y_reg_537 <= p_yuv_channels_ch1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln129_fu_314_p2 == 1'd0))) begin
        add_ln134_reg_502[21 : 8] <= add_ln134_fu_349_p2[21 : 8];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_height_reg_473 <= grp_rgb2yuv_1_fu_251_ap_return_1;
        p_yuv_width_reg_467 <= grp_rgb2yuv_1_fu_251_ap_return_0;
        zext_ln137_reg_479[7 : 0] <= zext_ln137_fu_299_p1[7 : 0];
        zext_ln138_reg_484[7 : 0] <= zext_ln138_fu_303_p1[7 : 0];
        zext_ln139_reg_489[7 : 0] <= zext_ln139_fu_307_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        trunc_ln1_reg_557 <= {{mul_ln138_fu_397_p2[14:7]}};
        trunc_ln2_reg_562 <= {{mul_ln139_fu_405_p2[14:7]}};
        trunc_ln_reg_552 <= {{mul_ln137_fu_389_p2[14:7]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        x_2_reg_497 <= x_2_fu_319_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        y_1_reg_510 <= y_1_fu_360_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln132_fu_355_p2 == 1'd0))) begin
        zext_ln134_1_reg_515[21 : 0] <= zext_ln134_1_fu_375_p1[21 : 0];
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_rgb2yuv_1_fu_251_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

always @ (*) begin
    if ((grp_yuv2rgb_1_fu_271_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_yuv2rgb_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_yuv2rgb_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((grp_yuv2rgb_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        out_height_ap_vld = 1'b1;
    end else begin
        out_height_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((grp_yuv2rgb_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
        out_width_ap_vld = 1'b1;
    end else begin
        out_width_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_scale_channels_ch1_address0 = zext_ln134_1_reg_515;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        p_scale_channels_ch1_address0 = grp_yuv2rgb_1_fu_271_in_channels_ch1_address0;
    end else begin
        p_scale_channels_ch1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_scale_channels_ch1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        p_scale_channels_ch1_ce0 = grp_yuv2rgb_1_fu_271_in_channels_ch1_ce0;
    end else begin
        p_scale_channels_ch1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_scale_channels_ch1_we0 = 1'b1;
    end else begin
        p_scale_channels_ch1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_scale_channels_ch2_address0 = zext_ln134_1_reg_515;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        p_scale_channels_ch2_address0 = grp_yuv2rgb_1_fu_271_in_channels_ch2_address0;
    end else begin
        p_scale_channels_ch2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_scale_channels_ch2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        p_scale_channels_ch2_ce0 = grp_yuv2rgb_1_fu_271_in_channels_ch2_ce0;
    end else begin
        p_scale_channels_ch2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_scale_channels_ch2_we0 = 1'b1;
    end else begin
        p_scale_channels_ch2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_scale_channels_ch3_address0 = zext_ln134_1_reg_515;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        p_scale_channels_ch3_address0 = grp_yuv2rgb_1_fu_271_in_channels_ch3_address0;
    end else begin
        p_scale_channels_ch3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_scale_channels_ch3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        p_scale_channels_ch3_ce0 = grp_yuv2rgb_1_fu_271_in_channels_ch3_ce0;
    end else begin
        p_scale_channels_ch3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        p_scale_channels_ch3_we0 = 1'b1;
    end else begin
        p_scale_channels_ch3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_yuv_channels_ch1_address0 = zext_ln134_1_fu_375_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_channels_ch1_address0 = grp_rgb2yuv_1_fu_251_out_channels_ch1_address0;
    end else begin
        p_yuv_channels_ch1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_yuv_channels_ch1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_channels_ch1_ce0 = grp_rgb2yuv_1_fu_251_out_channels_ch1_ce0;
    end else begin
        p_yuv_channels_ch1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_channels_ch1_we0 = grp_rgb2yuv_1_fu_251_out_channels_ch1_we0;
    end else begin
        p_yuv_channels_ch1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_yuv_channels_ch2_address0 = zext_ln134_1_fu_375_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_channels_ch2_address0 = grp_rgb2yuv_1_fu_251_out_channels_ch2_address0;
    end else begin
        p_yuv_channels_ch2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_yuv_channels_ch2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_channels_ch2_ce0 = grp_rgb2yuv_1_fu_251_out_channels_ch2_ce0;
    end else begin
        p_yuv_channels_ch2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_channels_ch2_we0 = grp_rgb2yuv_1_fu_251_out_channels_ch2_we0;
    end else begin
        p_yuv_channels_ch2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_yuv_channels_ch3_address0 = zext_ln134_1_fu_375_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_channels_ch3_address0 = grp_rgb2yuv_1_fu_251_out_channels_ch3_address0;
    end else begin
        p_yuv_channels_ch3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        p_yuv_channels_ch3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_channels_ch3_ce0 = grp_rgb2yuv_1_fu_251_out_channels_ch3_ce0;
    end else begin
        p_yuv_channels_ch3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        p_yuv_channels_ch3_we0 = grp_rgb2yuv_1_fu_251_out_channels_ch3_we0;
    end else begin
        p_yuv_channels_ch3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_rgb2yuv_1_fu_251_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln129_fu_314_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln132_fu_355_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_yuv2rgb_1_fu_271_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln134_1_fu_370_p2 = (add_ln134_reg_502 + zext_ln134_fu_366_p1);

assign add_ln134_fu_349_p2 = (tmp_cast_fu_329_p3 + tmp_1_cast_fu_341_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign grp_rgb2yuv_1_fu_251_ap_start = grp_rgb2yuv_1_fu_251_ap_start_reg;

assign grp_yuv2rgb_1_fu_271_ap_start = grp_yuv2rgb_1_fu_271_ap_start_reg;

assign icmp_ln129_fu_314_p2 = ((x_fu_96 == p_yuv_width_reg_467) ? 1'b1 : 1'b0);

assign icmp_ln132_fu_355_p2 = ((y_reg_240 == p_yuv_height_reg_473) ? 1'b1 : 1'b0);

assign in_channels_ch1_address0 = grp_rgb2yuv_1_fu_251_in_channels_ch1_address0;

assign in_channels_ch1_ce0 = grp_rgb2yuv_1_fu_251_in_channels_ch1_ce0;

assign in_channels_ch2_address0 = grp_rgb2yuv_1_fu_251_in_channels_ch2_address0;

assign in_channels_ch2_ce0 = grp_rgb2yuv_1_fu_251_in_channels_ch2_ce0;

assign in_channels_ch3_address0 = grp_rgb2yuv_1_fu_251_in_channels_ch3_address0;

assign in_channels_ch3_ce0 = grp_rgb2yuv_1_fu_251_in_channels_ch3_ce0;

assign mul_ln137_fu_389_p0 = mul_ln137_fu_389_p00;

assign mul_ln137_fu_389_p00 = Y_reg_537;

assign mul_ln137_fu_389_p1 = zext_ln137_reg_479;

assign mul_ln138_fu_397_p0 = mul_ln138_fu_397_p00;

assign mul_ln138_fu_397_p00 = U_reg_542;

assign mul_ln138_fu_397_p1 = zext_ln138_reg_484;

assign mul_ln139_fu_405_p0 = mul_ln139_fu_405_p00;

assign mul_ln139_fu_405_p00 = V_reg_547;

assign mul_ln139_fu_405_p1 = zext_ln139_reg_489;

assign out_channels_ch1_address0 = grp_yuv2rgb_1_fu_271_out_channels_ch1_address0;

assign out_channels_ch1_ce0 = grp_yuv2rgb_1_fu_271_out_channels_ch1_ce0;

assign out_channels_ch1_d0 = grp_yuv2rgb_1_fu_271_out_channels_ch1_d0;

assign out_channels_ch1_we0 = grp_yuv2rgb_1_fu_271_out_channels_ch1_we0;

assign out_channels_ch2_address0 = grp_yuv2rgb_1_fu_271_out_channels_ch2_address0;

assign out_channels_ch2_ce0 = grp_yuv2rgb_1_fu_271_out_channels_ch2_ce0;

assign out_channels_ch2_d0 = grp_yuv2rgb_1_fu_271_out_channels_ch2_d0;

assign out_channels_ch2_we0 = grp_yuv2rgb_1_fu_271_out_channels_ch2_we0;

assign out_channels_ch3_address0 = grp_yuv2rgb_1_fu_271_out_channels_ch3_address0;

assign out_channels_ch3_ce0 = grp_yuv2rgb_1_fu_271_out_channels_ch3_ce0;

assign out_channels_ch3_d0 = grp_yuv2rgb_1_fu_271_out_channels_ch3_d0;

assign out_channels_ch3_we0 = grp_yuv2rgb_1_fu_271_out_channels_ch3_we0;

assign out_height = grp_yuv2rgb_1_fu_271_ap_return_1;

assign out_width = grp_yuv2rgb_1_fu_271_ap_return_0;

assign tmp_1_cast_fu_341_p3 = {{trunc_ln134_1_fu_337_p1}, {8'd0}};

assign tmp_cast_fu_329_p3 = {{trunc_ln134_fu_325_p1}, {10'd0}};

assign trunc_ln134_1_fu_337_p1 = x_fu_96[13:0];

assign trunc_ln134_fu_325_p1 = x_fu_96[11:0];

assign x_2_fu_319_p2 = (x_fu_96 + 16'd1);

assign y_1_fu_360_p2 = (y_reg_240 + 16'd1);

assign zext_ln134_1_fu_375_p1 = add_ln134_1_fu_370_p2;

assign zext_ln134_fu_366_p1 = y_reg_240;

assign zext_ln137_fu_299_p1 = Y_scale;

assign zext_ln138_fu_303_p1 = U_scale;

assign zext_ln139_fu_307_p1 = V_scale;

always @ (posedge ap_clk) begin
    zext_ln137_reg_479[14:8] <= 7'b0000000;
    zext_ln138_reg_484[14:8] <= 7'b0000000;
    zext_ln139_reg_489[14:8] <= 7'b0000000;
    add_ln134_reg_502[7:0] <= 8'b00000000;
    zext_ln134_1_reg_515[63:22] <= 42'b000000000000000000000000000000000000000000;
end

endmodule //yuv_filter
