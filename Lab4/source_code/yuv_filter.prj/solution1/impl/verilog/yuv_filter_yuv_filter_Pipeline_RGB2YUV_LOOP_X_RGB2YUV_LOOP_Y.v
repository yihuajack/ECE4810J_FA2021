// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1.1 (64-bit)
// Version: 2021.1.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module yuv_filter_yuv_filter_Pipeline_RGB2YUV_LOOP_X_RGB2YUV_LOOP_Y (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        mul_ln49,
        height,
        in_channels_ch1_address0,
        in_channels_ch1_ce0,
        in_channels_ch1_q0,
        in_channels_ch2_address0,
        in_channels_ch2_ce0,
        in_channels_ch2_q0,
        in_channels_ch3_address0,
        in_channels_ch3_ce0,
        in_channels_ch3_q0,
        p_yuv_channels_ch1_address0,
        p_yuv_channels_ch1_ce0,
        p_yuv_channels_ch1_we0,
        p_yuv_channels_ch1_d0,
        p_yuv_channels_ch2_address0,
        p_yuv_channels_ch2_ce0,
        p_yuv_channels_ch2_we0,
        p_yuv_channels_ch2_d0,
        p_yuv_channels_ch3_address0,
        p_yuv_channels_ch3_ce0,
        p_yuv_channels_ch3_we0,
        p_yuv_channels_ch3_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] mul_ln49;
input  [15:0] height;
output  [21:0] in_channels_ch1_address0;
output   in_channels_ch1_ce0;
input  [7:0] in_channels_ch1_q0;
output  [21:0] in_channels_ch2_address0;
output   in_channels_ch2_ce0;
input  [7:0] in_channels_ch2_q0;
output  [21:0] in_channels_ch3_address0;
output   in_channels_ch3_ce0;
input  [7:0] in_channels_ch3_q0;
output  [21:0] p_yuv_channels_ch1_address0;
output   p_yuv_channels_ch1_ce0;
output   p_yuv_channels_ch1_we0;
output  [7:0] p_yuv_channels_ch1_d0;
output  [21:0] p_yuv_channels_ch2_address0;
output   p_yuv_channels_ch2_ce0;
output   p_yuv_channels_ch2_we0;
output  [7:0] p_yuv_channels_ch2_d0;
output  [21:0] p_yuv_channels_ch3_address0;
output   p_yuv_channels_ch3_ce0;
output   p_yuv_channels_ch3_we0;
output  [7:0] p_yuv_channels_ch3_d0;

reg ap_idle;
reg in_channels_ch1_ce0;
reg in_channels_ch2_ce0;
reg in_channels_ch3_ce0;
reg p_yuv_channels_ch1_ce0;
reg p_yuv_channels_ch1_we0;
reg p_yuv_channels_ch2_ce0;
reg p_yuv_channels_ch2_we0;
reg p_yuv_channels_ch3_ce0;
reg p_yuv_channels_ch3_we0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln49_fu_220_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln52_fu_234_p2;
reg   [0:0] icmp_ln52_reg_611;
wire   [15:0] select_ln34_fu_239_p3;
reg   [15:0] select_ln34_reg_616;
wire   [21:0] add_ln54_1_fu_312_p2;
reg   [21:0] add_ln54_1_reg_621;
wire   [63:0] zext_ln54_1_fu_323_p1;
reg   [63:0] zext_ln54_1_reg_626;
reg   [63:0] zext_ln54_1_reg_626_pp0_iter4_reg;
reg   [63:0] zext_ln54_1_reg_626_pp0_iter5_reg;
reg   [63:0] zext_ln54_1_reg_626_pp0_iter6_reg;
reg   [63:0] zext_ln54_1_reg_626_pp0_iter7_reg;
reg   [7:0] R_reg_649;
reg   [7:0] R_reg_649_pp0_iter5_reg;
reg   [7:0] R_reg_649_pp0_iter6_reg;
reg   [7:0] B_reg_655;
reg   [7:0] B_reg_655_pp0_iter5_reg;
wire   [14:0] zext_ln57_fu_328_p1;
reg   [7:0] G_reg_673;
reg   [7:0] G_reg_673_pp0_iter6_reg;
wire  signed [15:0] mul_ln58_1_fu_352_p2;
wire   [15:0] sub_ln58_fu_384_p2;
reg   [15:0] sub_ln58_reg_690;
wire   [15:0] mul_ln59_1_fu_390_p2;
wire   [13:0] add_ln59_1_fu_423_p2;
reg   [13:0] add_ln59_1_reg_700;
reg   [7:0] trunc_ln_reg_705;
reg   [7:0] trunc_ln1_reg_710;
reg   [7:0] trunc_ln2_reg_715;
wire    ap_block_pp0_stage0;
reg   [15:0] y_fu_100;
wire   [15:0] y_3_fu_247_p2;
wire    ap_loop_init;
reg   [15:0] x_fu_104;
wire   [15:0] select_ln34_1_fu_272_p3;
reg   [31:0] indvar_flatten_fu_108;
wire   [31:0] add_ln49_fu_225_p2;
wire   [15:0] x_6_fu_266_p2;
wire   [11:0] trunc_ln54_fu_279_p1;
wire   [13:0] trunc_ln54_1_fu_291_p1;
wire   [21:0] tmp_cast_fu_283_p3;
wire   [21:0] tmp_1_cast_fu_295_p3;
wire   [21:0] add_ln54_fu_303_p2;
wire   [21:0] zext_ln54_fu_309_p1;
wire   [8:0] zext_ln57_4_fu_339_p1;
wire   [8:0] add_ln57_3_fu_342_p2;
wire   [7:0] mul_ln58_1_fu_352_p0;
wire   [15:0] zext_ln57_3_fu_336_p1;
wire  signed [7:0] mul_ln58_1_fu_352_p1;
wire   [14:0] shl_ln1_fu_358_p3;
wire   [11:0] shl_ln58_1_fu_369_p3;
wire   [15:0] zext_ln58_fu_365_p1;
wire   [15:0] zext_ln58_2_fu_380_p1;
wire   [7:0] mul_ln59_1_fu_390_p0;
wire  signed [7:0] mul_ln59_1_fu_390_p1;
wire   [12:0] zext_ln58_1_fu_376_p1;
wire   [12:0] sub_ln59_fu_396_p2;
wire   [8:0] shl_ln2_fu_406_p3;
wire  signed [13:0] sext_ln59_fu_402_p1;
wire   [13:0] zext_ln59_1_fu_413_p1;
wire   [13:0] sub_ln59_1_fu_417_p2;
wire   [13:0] shl_ln_fu_429_p3;
wire   [8:0] shl_ln57_1_fu_440_p3;
wire   [14:0] shl_ln57_2_fu_451_p3;
wire   [15:0] zext_ln57_2_fu_447_p1;
wire   [15:0] zext_ln57_5_fu_458_p1;
wire   [15:0] add_ln57_fu_462_p2;
wire   [15:0] zext_ln57_1_fu_436_p1;
wire   [12:0] grp_fu_549_p3;
wire   [15:0] zext_ln57_8_fu_474_p1;
wire   [15:0] add_ln57_1_fu_468_p2;
wire   [15:0] add_ln57_2_fu_477_p2;
wire   [15:0] add_ln58_1_fu_493_p2;
wire  signed [15:0] grp_fu_558_p3;
(* use_dsp48 = "no" *) wire   [15:0] add_ln58_2_fu_498_p2;
wire  signed [15:0] sext_ln59_1_fu_513_p1;
wire   [15:0] grp_fu_567_p3;
(* use_dsp48 = "no" *) wire   [15:0] add_ln59_2_fu_516_p2;
wire   [7:0] grp_fu_549_p0;
wire   [4:0] grp_fu_549_p1;
wire   [8:0] grp_fu_549_p2;
wire   [7:0] grp_fu_558_p0;
wire  signed [6:0] grp_fu_558_p1;
wire   [7:0] grp_fu_567_p0;
wire   [6:0] grp_fu_567_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [12:0] grp_fu_549_p00;
wire   [12:0] grp_fu_549_p20;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_done_reg = 1'b0;
end

yuv_filter_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U1(
    .din0(mul_ln58_1_fu_352_p0),
    .din1(mul_ln58_1_fu_352_p1),
    .dout(mul_ln58_1_fu_352_p2)
);

yuv_filter_mul_8ns_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8s_16_1_1_U2(
    .din0(mul_ln59_1_fu_390_p0),
    .din1(mul_ln59_1_fu_390_p1),
    .dout(mul_ln59_1_fu_390_p2)
);

yuv_filter_mac_muladd_8ns_5ns_9ns_13_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 5 ),
    .din2_WIDTH( 9 ),
    .dout_WIDTH( 13 ))
mac_muladd_8ns_5ns_9ns_13_4_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_549_p0),
    .din1(grp_fu_549_p1),
    .din2(grp_fu_549_p2),
    .ce(1'b1),
    .dout(grp_fu_549_p3)
);

yuv_filter_mac_muladd_8ns_7s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8ns_7s_16s_16_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_558_p0),
    .din1(grp_fu_558_p1),
    .din2(mul_ln58_1_fu_352_p2),
    .ce(1'b1),
    .dout(grp_fu_558_p3)
);

yuv_filter_mac_muladd_8ns_7ns_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8ns_7ns_16ns_16_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_567_p0),
    .din1(grp_fu_567_p1),
    .din2(mul_ln59_1_fu_390_p2),
    .ce(1'b1),
    .dout(grp_fu_567_p3)
);

yuv_filter_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_108 <= 32'd0;
        end else if (((icmp_ln49_fu_220_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten_fu_108 <= add_ln49_fu_225_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            x_fu_104 <= 16'd0;
        end else if ((ap_enable_reg_pp0_iter2 == 1'b1)) begin
            x_fu_104 <= select_ln34_1_fu_272_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            y_fu_100 <= 16'd0;
        end else if (((icmp_ln49_fu_220_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            y_fu_100 <= y_3_fu_247_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        B_reg_655 <= in_channels_ch3_q0;
        B_reg_655_pp0_iter5_reg <= B_reg_655;
        G_reg_673 <= in_channels_ch2_q0;
        G_reg_673_pp0_iter6_reg <= G_reg_673;
        R_reg_649 <= in_channels_ch1_q0;
        R_reg_649_pp0_iter5_reg <= R_reg_649;
        R_reg_649_pp0_iter6_reg <= R_reg_649_pp0_iter5_reg;
        add_ln54_1_reg_621 <= add_ln54_1_fu_312_p2;
        add_ln59_1_reg_700[13 : 1] <= add_ln59_1_fu_423_p2[13 : 1];
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        sub_ln58_reg_690[15 : 4] <= sub_ln58_fu_384_p2[15 : 4];
        trunc_ln1_reg_710 <= {{add_ln58_2_fu_498_p2[15:8]}};
        trunc_ln2_reg_715 <= {{add_ln59_2_fu_516_p2[15:8]}};
        trunc_ln_reg_705 <= {{add_ln57_2_fu_477_p2[15:8]}};
        zext_ln54_1_reg_626[21 : 0] <= zext_ln54_1_fu_323_p1[21 : 0];
        zext_ln54_1_reg_626_pp0_iter4_reg[21 : 0] <= zext_ln54_1_reg_626[21 : 0];
        zext_ln54_1_reg_626_pp0_iter5_reg[21 : 0] <= zext_ln54_1_reg_626_pp0_iter4_reg[21 : 0];
        zext_ln54_1_reg_626_pp0_iter6_reg[21 : 0] <= zext_ln54_1_reg_626_pp0_iter5_reg[21 : 0];
        zext_ln54_1_reg_626_pp0_iter7_reg[21 : 0] <= zext_ln54_1_reg_626_pp0_iter6_reg[21 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln49_fu_220_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln52_reg_611 <= icmp_ln52_fu_234_p2;
        select_ln34_reg_616 <= select_ln34_fu_239_p3;
    end
end

always @ (*) begin
    if (((icmp_ln49_fu_220_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        in_channels_ch1_ce0 = 1'b1;
    end else begin
        in_channels_ch1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        in_channels_ch2_ce0 = 1'b1;
    end else begin
        in_channels_ch2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        in_channels_ch3_ce0 = 1'b1;
    end else begin
        in_channels_ch3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        p_yuv_channels_ch1_ce0 = 1'b1;
    end else begin
        p_yuv_channels_ch1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        p_yuv_channels_ch1_we0 = 1'b1;
    end else begin
        p_yuv_channels_ch1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        p_yuv_channels_ch2_ce0 = 1'b1;
    end else begin
        p_yuv_channels_ch2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        p_yuv_channels_ch2_we0 = 1'b1;
    end else begin
        p_yuv_channels_ch2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        p_yuv_channels_ch3_ce0 = 1'b1;
    end else begin
        p_yuv_channels_ch3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        p_yuv_channels_ch3_we0 = 1'b1;
    end else begin
        p_yuv_channels_ch3_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln49_fu_225_p2 = (indvar_flatten_fu_108 + 32'd1);

assign add_ln54_1_fu_312_p2 = (add_ln54_fu_303_p2 + zext_ln54_fu_309_p1);

assign add_ln54_fu_303_p2 = (tmp_cast_fu_283_p3 + tmp_1_cast_fu_295_p3);

assign add_ln57_1_fu_468_p2 = (add_ln57_fu_462_p2 + zext_ln57_1_fu_436_p1);

assign add_ln57_2_fu_477_p2 = (zext_ln57_8_fu_474_p1 + add_ln57_1_fu_468_p2);

assign add_ln57_3_fu_342_p2 = (zext_ln57_4_fu_339_p1 + 9'd128);

assign add_ln57_fu_462_p2 = (zext_ln57_2_fu_447_p1 + zext_ln57_5_fu_458_p1);

assign add_ln58_1_fu_493_p2 = (sub_ln58_reg_690 + 16'd128);

assign add_ln58_2_fu_498_p2 = ($signed(add_ln58_1_fu_493_p2) + $signed(grp_fu_558_p3));

assign add_ln59_1_fu_423_p2 = (sub_ln59_1_fu_417_p2 + 14'd128);

assign add_ln59_2_fu_516_p2 = ($signed(sext_ln59_1_fu_513_p1) + $signed(grp_fu_567_p3));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign grp_fu_549_p0 = grp_fu_549_p00;

assign grp_fu_549_p00 = in_channels_ch3_q0;

assign grp_fu_549_p1 = 13'd25;

assign grp_fu_549_p2 = grp_fu_549_p20;

assign grp_fu_549_p20 = add_ln57_3_fu_342_p2;

assign grp_fu_558_p0 = zext_ln57_fu_328_p1;

assign grp_fu_558_p1 = 15'd32730;

assign grp_fu_567_p0 = zext_ln57_fu_328_p1;

assign grp_fu_567_p1 = 15'd122;

assign icmp_ln49_fu_220_p2 = ((indvar_flatten_fu_108 == mul_ln49) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_234_p2 = ((y_fu_100 == height) ? 1'b1 : 1'b0);

assign in_channels_ch1_address0 = zext_ln54_1_fu_323_p1;

assign in_channels_ch2_address0 = zext_ln54_1_reg_626;

assign in_channels_ch3_address0 = zext_ln54_1_fu_323_p1;

assign mul_ln58_1_fu_352_p0 = zext_ln57_3_fu_336_p1;

assign mul_ln58_1_fu_352_p1 = 16'd65462;

assign mul_ln59_1_fu_390_p0 = zext_ln57_3_fu_336_p1;

assign mul_ln59_1_fu_390_p1 = 16'd65442;

assign p_yuv_channels_ch1_address0 = zext_ln54_1_reg_626_pp0_iter7_reg;

assign p_yuv_channels_ch1_d0 = (trunc_ln_reg_705 + 8'd16);

assign p_yuv_channels_ch2_address0 = zext_ln54_1_reg_626_pp0_iter7_reg;

assign p_yuv_channels_ch2_d0 = (trunc_ln1_reg_710 ^ 8'd128);

assign p_yuv_channels_ch3_address0 = zext_ln54_1_reg_626_pp0_iter7_reg;

assign p_yuv_channels_ch3_d0 = (trunc_ln2_reg_715 ^ 8'd128);

assign select_ln34_1_fu_272_p3 = ((icmp_ln52_reg_611[0:0] == 1'b1) ? x_6_fu_266_p2 : x_fu_104);

assign select_ln34_fu_239_p3 = ((icmp_ln52_fu_234_p2[0:0] == 1'b1) ? 16'd0 : y_fu_100);

assign sext_ln59_1_fu_513_p1 = $signed(add_ln59_1_reg_700);

assign sext_ln59_fu_402_p1 = $signed(sub_ln59_fu_396_p2);

assign shl_ln1_fu_358_p3 = {{B_reg_655_pp0_iter5_reg}, {7'd0}};

assign shl_ln2_fu_406_p3 = {{B_reg_655_pp0_iter5_reg}, {1'd0}};

assign shl_ln57_1_fu_440_p3 = {{R_reg_649_pp0_iter6_reg}, {1'd0}};

assign shl_ln57_2_fu_451_p3 = {{G_reg_673_pp0_iter6_reg}, {7'd0}};

assign shl_ln58_1_fu_369_p3 = {{B_reg_655_pp0_iter5_reg}, {4'd0}};

assign shl_ln_fu_429_p3 = {{R_reg_649_pp0_iter6_reg}, {6'd0}};

assign sub_ln58_fu_384_p2 = (zext_ln58_fu_365_p1 - zext_ln58_2_fu_380_p1);

assign sub_ln59_1_fu_417_p2 = ($signed(sext_ln59_fu_402_p1) - $signed(zext_ln59_1_fu_413_p1));

assign sub_ln59_fu_396_p2 = (13'd0 - zext_ln58_1_fu_376_p1);

assign tmp_1_cast_fu_295_p3 = {{trunc_ln54_1_fu_291_p1}, {8'd0}};

assign tmp_cast_fu_283_p3 = {{trunc_ln54_fu_279_p1}, {10'd0}};

assign trunc_ln54_1_fu_291_p1 = select_ln34_1_fu_272_p3[13:0];

assign trunc_ln54_fu_279_p1 = select_ln34_1_fu_272_p3[11:0];

assign x_6_fu_266_p2 = (x_fu_104 + 16'd1);

assign y_3_fu_247_p2 = (select_ln34_fu_239_p3 + 16'd1);

assign zext_ln54_1_fu_323_p1 = add_ln54_1_reg_621;

assign zext_ln54_fu_309_p1 = select_ln34_reg_616;

assign zext_ln57_1_fu_436_p1 = shl_ln_fu_429_p3;

assign zext_ln57_2_fu_447_p1 = shl_ln57_1_fu_440_p3;

assign zext_ln57_3_fu_336_p1 = G_reg_673;

assign zext_ln57_4_fu_339_p1 = G_reg_673;

assign zext_ln57_5_fu_458_p1 = shl_ln57_2_fu_451_p3;

assign zext_ln57_8_fu_474_p1 = grp_fu_549_p3;

assign zext_ln57_fu_328_p1 = in_channels_ch1_q0;

assign zext_ln58_1_fu_376_p1 = shl_ln58_1_fu_369_p3;

assign zext_ln58_2_fu_380_p1 = shl_ln58_1_fu_369_p3;

assign zext_ln58_fu_365_p1 = shl_ln1_fu_358_p3;

assign zext_ln59_1_fu_413_p1 = shl_ln2_fu_406_p3;

always @ (posedge ap_clk) begin
    zext_ln54_1_reg_626[63:22] <= 42'b000000000000000000000000000000000000000000;
    zext_ln54_1_reg_626_pp0_iter4_reg[63:22] <= 42'b000000000000000000000000000000000000000000;
    zext_ln54_1_reg_626_pp0_iter5_reg[63:22] <= 42'b000000000000000000000000000000000000000000;
    zext_ln54_1_reg_626_pp0_iter6_reg[63:22] <= 42'b000000000000000000000000000000000000000000;
    zext_ln54_1_reg_626_pp0_iter7_reg[63:22] <= 42'b000000000000000000000000000000000000000000;
    sub_ln58_reg_690[3:0] <= 4'b0000;
    add_ln59_1_reg_700[0] <= 1'b0;
end

endmodule //yuv_filter_yuv_filter_Pipeline_RGB2YUV_LOOP_X_RGB2YUV_LOOP_Y
