// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1.1 (64-bit)
// Version: 2021.1.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="yuv_filter_yuv_filter,hls_ip_2021_1_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.271000,HLS_SYN_LAT=2353237,HLS_SYN_TPT=784413,HLS_SYN_MEM=24576,HLS_SYN_DSP=0,HLS_SYN_FF=1860,HLS_SYN_LUT=2336,HLS_VERSION=2021_1_1}" *)

module yuv_filter (
// synthesis translate_off
// synthesis translate_on
// synthesis translate_off
// synthesis translate_on
// synthesis translate_off
// synthesis translate_on
// synthesis translate_off
// synthesis translate_on
// synthesis translate_off
// synthesis translate_on
        ap_clk,
        ap_rst,
        in_channels_ch1_address0,
        in_channels_ch1_ce0,
        in_channels_ch1_d0,
        in_channels_ch1_q0,
        in_channels_ch1_we0,
        in_channels_ch1_address1,
        in_channels_ch1_ce1,
        in_channels_ch1_d1,
        in_channels_ch1_q1,
        in_channels_ch1_we1,
        in_channels_ch2_address0,
        in_channels_ch2_ce0,
        in_channels_ch2_d0,
        in_channels_ch2_q0,
        in_channels_ch2_we0,
        in_channels_ch2_address1,
        in_channels_ch2_ce1,
        in_channels_ch2_d1,
        in_channels_ch2_q1,
        in_channels_ch2_we1,
        in_channels_ch3_address0,
        in_channels_ch3_ce0,
        in_channels_ch3_d0,
        in_channels_ch3_q0,
        in_channels_ch3_we0,
        in_channels_ch3_address1,
        in_channels_ch3_ce1,
        in_channels_ch3_d1,
        in_channels_ch3_q1,
        in_channels_ch3_we1,
        in_width,
        in_height,
        out_channels_ch1_address0,
        out_channels_ch1_ce0,
        out_channels_ch1_d0,
        out_channels_ch1_q0,
        out_channels_ch1_we0,
        out_channels_ch1_address1,
        out_channels_ch1_ce1,
        out_channels_ch1_d1,
        out_channels_ch1_q1,
        out_channels_ch1_we1,
        out_channels_ch2_address0,
        out_channels_ch2_ce0,
        out_channels_ch2_d0,
        out_channels_ch2_q0,
        out_channels_ch2_we0,
        out_channels_ch2_address1,
        out_channels_ch2_ce1,
        out_channels_ch2_d1,
        out_channels_ch2_q1,
        out_channels_ch2_we1,
        out_channels_ch3_address0,
        out_channels_ch3_ce0,
        out_channels_ch3_d0,
        out_channels_ch3_q0,
        out_channels_ch3_we0,
        out_channels_ch3_address1,
        out_channels_ch3_ce1,
        out_channels_ch3_d1,
        out_channels_ch3_q1,
        out_channels_ch3_we1,
        out_width,
        out_height,
        Y_scale,
        U_scale,
        V_scale,
        ap_start,
        out_width_ap_vld,
        out_height_ap_vld,
        ap_done,
        ap_ready,
        ap_idle
);


// synthesis translate_off
// synthesis translate_on
// synthesis translate_off
// synthesis translate_on
// synthesis translate_off
// synthesis translate_on
// synthesis translate_off
// synthesis translate_on
// synthesis translate_off
// synthesis translate_on
input   ap_clk;
input   ap_rst;
output  [21:0] in_channels_ch1_address0;
output   in_channels_ch1_ce0;
output  [7:0] in_channels_ch1_d0;
input  [7:0] in_channels_ch1_q0;
output   in_channels_ch1_we0;
output  [21:0] in_channels_ch1_address1;
output   in_channels_ch1_ce1;
output  [7:0] in_channels_ch1_d1;
input  [7:0] in_channels_ch1_q1;
output   in_channels_ch1_we1;
output  [21:0] in_channels_ch2_address0;
output   in_channels_ch2_ce0;
output  [7:0] in_channels_ch2_d0;
input  [7:0] in_channels_ch2_q0;
output   in_channels_ch2_we0;
output  [21:0] in_channels_ch2_address1;
output   in_channels_ch2_ce1;
output  [7:0] in_channels_ch2_d1;
input  [7:0] in_channels_ch2_q1;
output   in_channels_ch2_we1;
output  [21:0] in_channels_ch3_address0;
output   in_channels_ch3_ce0;
output  [7:0] in_channels_ch3_d0;
input  [7:0] in_channels_ch3_q0;
output   in_channels_ch3_we0;
output  [21:0] in_channels_ch3_address1;
output   in_channels_ch3_ce1;
output  [7:0] in_channels_ch3_d1;
input  [7:0] in_channels_ch3_q1;
output   in_channels_ch3_we1;
input  [15:0] in_width;
input  [15:0] in_height;
output  [21:0] out_channels_ch1_address0;
output   out_channels_ch1_ce0;
output  [7:0] out_channels_ch1_d0;
input  [7:0] out_channels_ch1_q0;
output   out_channels_ch1_we0;
output  [21:0] out_channels_ch1_address1;
output   out_channels_ch1_ce1;
output  [7:0] out_channels_ch1_d1;
input  [7:0] out_channels_ch1_q1;
output   out_channels_ch1_we1;
output  [21:0] out_channels_ch2_address0;
output   out_channels_ch2_ce0;
output  [7:0] out_channels_ch2_d0;
input  [7:0] out_channels_ch2_q0;
output   out_channels_ch2_we0;
output  [21:0] out_channels_ch2_address1;
output   out_channels_ch2_ce1;
output  [7:0] out_channels_ch2_d1;
input  [7:0] out_channels_ch2_q1;
output   out_channels_ch2_we1;
output  [21:0] out_channels_ch3_address0;
output   out_channels_ch3_ce0;
output  [7:0] out_channels_ch3_d0;
input  [7:0] out_channels_ch3_q0;
output   out_channels_ch3_we0;
output  [21:0] out_channels_ch3_address1;
output   out_channels_ch3_ce1;
output  [7:0] out_channels_ch3_d1;
input  [7:0] out_channels_ch3_q1;
output   out_channels_ch3_we1;
output  [15:0] out_width;
output  [15:0] out_height;
input  [7:0] Y_scale;
input  [7:0] U_scale;
input  [7:0] V_scale;
input   ap_start;
output   out_width_ap_vld;
output   out_height_ap_vld;
output   ap_done;
output   ap_ready;
output   ap_idle;

wire   [7:0] p_yuv_channels_ch1_i_q0;
wire   [7:0] p_yuv_channels_ch1_t_q0;
wire   [7:0] p_yuv_channels_ch2_i_q0;
wire   [7:0] p_yuv_channels_ch2_t_q0;
wire   [7:0] p_yuv_channels_ch3_i_q0;
wire   [7:0] p_yuv_channels_ch3_t_q0;
wire   [7:0] p_scale_channels_ch1_i_q0;
wire   [7:0] p_scale_channels_ch1_t_q0;
wire   [7:0] p_scale_channels_ch2_i_q0;
wire   [7:0] p_scale_channels_ch2_t_q0;
wire   [7:0] p_scale_channels_ch3_i_q0;
wire   [7:0] p_scale_channels_ch3_t_q0;
wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire   [7:0] entry_proc_U0_Y_scale_c_din;
wire    entry_proc_U0_Y_scale_c_write;
wire   [7:0] entry_proc_U0_U_scale_c_din;
wire    entry_proc_U0_U_scale_c_write;
wire   [7:0] entry_proc_U0_V_scale_c_din;
wire    entry_proc_U0_V_scale_c_write;
wire    rgb2yuv_1_U0_ap_start;
wire    rgb2yuv_1_U0_ap_done;
wire    rgb2yuv_1_U0_ap_continue;
wire    rgb2yuv_1_U0_ap_idle;
wire    rgb2yuv_1_U0_ap_ready;
wire   [21:0] rgb2yuv_1_U0_in_channels_ch1_address0;
wire    rgb2yuv_1_U0_in_channels_ch1_ce0;
wire   [21:0] rgb2yuv_1_U0_in_channels_ch2_address0;
wire    rgb2yuv_1_U0_in_channels_ch2_ce0;
wire   [21:0] rgb2yuv_1_U0_in_channels_ch3_address0;
wire    rgb2yuv_1_U0_in_channels_ch3_ce0;
wire   [21:0] rgb2yuv_1_U0_out_channels_ch1_address0;
wire    rgb2yuv_1_U0_out_channels_ch1_ce0;
wire    rgb2yuv_1_U0_out_channels_ch1_we0;
wire   [7:0] rgb2yuv_1_U0_out_channels_ch1_d0;
wire   [21:0] rgb2yuv_1_U0_out_channels_ch2_address0;
wire    rgb2yuv_1_U0_out_channels_ch2_ce0;
wire    rgb2yuv_1_U0_out_channels_ch2_we0;
wire   [7:0] rgb2yuv_1_U0_out_channels_ch2_d0;
wire   [21:0] rgb2yuv_1_U0_out_channels_ch3_address0;
wire    rgb2yuv_1_U0_out_channels_ch3_ce0;
wire    rgb2yuv_1_U0_out_channels_ch3_we0;
wire   [7:0] rgb2yuv_1_U0_out_channels_ch3_d0;
wire   [15:0] rgb2yuv_1_U0_ap_return_0;
wire   [15:0] rgb2yuv_1_U0_ap_return_1;
wire    ap_channel_done_p_yuv_height;
wire    p_yuv_height_full_n;
reg    ap_sync_reg_channel_write_p_yuv_height;
wire    ap_sync_channel_write_p_yuv_height;
wire    ap_channel_done_p_yuv_width;
wire    p_yuv_width_full_n;
reg    ap_sync_reg_channel_write_p_yuv_width;
wire    ap_sync_channel_write_p_yuv_width;
wire    ap_channel_done_p_yuv_channels_ch3;
wire    rgb2yuv_1_U0_out_channels_ch3_full_n;
reg    ap_sync_reg_channel_write_p_yuv_channels_ch3;
wire    ap_sync_channel_write_p_yuv_channels_ch3;
wire    ap_channel_done_p_yuv_channels_ch2;
wire    rgb2yuv_1_U0_out_channels_ch2_full_n;
reg    ap_sync_reg_channel_write_p_yuv_channels_ch2;
wire    ap_sync_channel_write_p_yuv_channels_ch2;
wire    ap_channel_done_p_yuv_channels_ch1;
wire    rgb2yuv_1_U0_out_channels_ch1_full_n;
reg    ap_sync_reg_channel_write_p_yuv_channels_ch1;
wire    ap_sync_channel_write_p_yuv_channels_ch1;
wire    yuv_scale_U0_ap_start;
wire    yuv_scale_U0_ap_done;
wire    yuv_scale_U0_ap_continue;
wire    yuv_scale_U0_ap_idle;
wire    yuv_scale_U0_ap_ready;
wire   [21:0] yuv_scale_U0_in_channels_ch1_address0;
wire    yuv_scale_U0_in_channels_ch1_ce0;
wire   [21:0] yuv_scale_U0_in_channels_ch2_address0;
wire    yuv_scale_U0_in_channels_ch2_ce0;
wire   [21:0] yuv_scale_U0_in_channels_ch3_address0;
wire    yuv_scale_U0_in_channels_ch3_ce0;
wire   [21:0] yuv_scale_U0_out_channels_ch1_address0;
wire    yuv_scale_U0_out_channels_ch1_ce0;
wire    yuv_scale_U0_out_channels_ch1_we0;
wire   [7:0] yuv_scale_U0_out_channels_ch1_d0;
wire   [21:0] yuv_scale_U0_out_channels_ch2_address0;
wire    yuv_scale_U0_out_channels_ch2_ce0;
wire    yuv_scale_U0_out_channels_ch2_we0;
wire   [7:0] yuv_scale_U0_out_channels_ch2_d0;
wire   [21:0] yuv_scale_U0_out_channels_ch3_address0;
wire    yuv_scale_U0_out_channels_ch3_ce0;
wire    yuv_scale_U0_out_channels_ch3_we0;
wire   [7:0] yuv_scale_U0_out_channels_ch3_d0;
wire    yuv_scale_U0_Y_scale_read;
wire    yuv_scale_U0_U_scale_read;
wire    yuv_scale_U0_V_scale_read;
wire   [15:0] yuv_scale_U0_ap_return_0;
wire   [15:0] yuv_scale_U0_ap_return_1;
wire    ap_channel_done_p_scale_height;
wire    p_scale_height_full_n;
reg    ap_sync_reg_channel_write_p_scale_height;
wire    ap_sync_channel_write_p_scale_height;
wire    ap_channel_done_p_scale_width;
wire    p_scale_width_full_n;
reg    ap_sync_reg_channel_write_p_scale_width;
wire    ap_sync_channel_write_p_scale_width;
wire    ap_channel_done_p_scale_channels_ch3;
wire    yuv_scale_U0_out_channels_ch3_full_n;
reg    ap_sync_reg_channel_write_p_scale_channels_ch3;
wire    ap_sync_channel_write_p_scale_channels_ch3;
wire    ap_channel_done_p_scale_channels_ch2;
wire    yuv_scale_U0_out_channels_ch2_full_n;
reg    ap_sync_reg_channel_write_p_scale_channels_ch2;
wire    ap_sync_channel_write_p_scale_channels_ch2;
wire    ap_channel_done_p_scale_channels_ch1;
wire    yuv_scale_U0_out_channels_ch1_full_n;
reg    ap_sync_reg_channel_write_p_scale_channels_ch1;
wire    ap_sync_channel_write_p_scale_channels_ch1;
wire    yuv2rgb_1_U0_ap_start;
wire    yuv2rgb_1_U0_ap_done;
wire    yuv2rgb_1_U0_ap_continue;
wire    yuv2rgb_1_U0_ap_idle;
wire    yuv2rgb_1_U0_ap_ready;
wire   [21:0] yuv2rgb_1_U0_in_channels_ch1_address0;
wire    yuv2rgb_1_U0_in_channels_ch1_ce0;
wire   [21:0] yuv2rgb_1_U0_in_channels_ch2_address0;
wire    yuv2rgb_1_U0_in_channels_ch2_ce0;
wire   [21:0] yuv2rgb_1_U0_in_channels_ch3_address0;
wire    yuv2rgb_1_U0_in_channels_ch3_ce0;
wire   [21:0] yuv2rgb_1_U0_out_channels_ch1_address0;
wire    yuv2rgb_1_U0_out_channels_ch1_ce0;
wire    yuv2rgb_1_U0_out_channels_ch1_we0;
wire   [7:0] yuv2rgb_1_U0_out_channels_ch1_d0;
wire   [21:0] yuv2rgb_1_U0_out_channels_ch2_address0;
wire    yuv2rgb_1_U0_out_channels_ch2_ce0;
wire    yuv2rgb_1_U0_out_channels_ch2_we0;
wire   [7:0] yuv2rgb_1_U0_out_channels_ch2_d0;
wire   [21:0] yuv2rgb_1_U0_out_channels_ch3_address0;
wire    yuv2rgb_1_U0_out_channels_ch3_ce0;
wire    yuv2rgb_1_U0_out_channels_ch3_we0;
wire   [7:0] yuv2rgb_1_U0_out_channels_ch3_d0;
wire   [15:0] yuv2rgb_1_U0_out_width;
wire    yuv2rgb_1_U0_out_width_ap_vld;
wire   [15:0] yuv2rgb_1_U0_out_height;
wire    yuv2rgb_1_U0_out_height_ap_vld;
wire    p_yuv_channels_ch1_i_full_n;
wire    p_yuv_channels_ch1_t_empty_n;
wire    p_yuv_channels_ch2_i_full_n;
wire    p_yuv_channels_ch2_t_empty_n;
wire    p_yuv_channels_ch3_i_full_n;
wire    p_yuv_channels_ch3_t_empty_n;
wire    p_scale_channels_ch1_i_full_n;
wire    p_scale_channels_ch1_t_empty_n;
wire    p_scale_channels_ch2_i_full_n;
wire    p_scale_channels_ch2_t_empty_n;
wire    p_scale_channels_ch3_i_full_n;
wire    p_scale_channels_ch3_t_empty_n;
wire    Y_scale_c_full_n;
wire   [7:0] Y_scale_c_dout;
wire    Y_scale_c_empty_n;
wire    U_scale_c_full_n;
wire   [7:0] U_scale_c_dout;
wire    U_scale_c_empty_n;
wire    V_scale_c_full_n;
wire   [7:0] V_scale_c_dout;
wire    V_scale_c_empty_n;
wire   [15:0] p_yuv_width_dout;
wire    p_yuv_width_empty_n;
wire   [15:0] p_yuv_height_dout;
wire    p_yuv_height_empty_n;
wire   [15:0] p_scale_width_dout;
wire    p_scale_width_empty_n;
wire   [15:0] p_scale_height_dout;
wire    p_scale_height_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_entry_proc_U0_ap_ready;
wire    ap_sync_entry_proc_U0_ap_ready;
reg    ap_sync_reg_rgb2yuv_1_U0_ap_ready;
wire    ap_sync_rgb2yuv_1_U0_ap_ready;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_p_yuv_height = 1'b0;
#0 ap_sync_reg_channel_write_p_yuv_width = 1'b0;
#0 ap_sync_reg_channel_write_p_yuv_channels_ch3 = 1'b0;
#0 ap_sync_reg_channel_write_p_yuv_channels_ch2 = 1'b0;
#0 ap_sync_reg_channel_write_p_yuv_channels_ch1 = 1'b0;
#0 ap_sync_reg_channel_write_p_scale_height = 1'b0;
#0 ap_sync_reg_channel_write_p_scale_width = 1'b0;
#0 ap_sync_reg_channel_write_p_scale_channels_ch3 = 1'b0;
#0 ap_sync_reg_channel_write_p_scale_channels_ch2 = 1'b0;
#0 ap_sync_reg_channel_write_p_scale_channels_ch1 = 1'b0;
#0 ap_sync_reg_entry_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_rgb2yuv_1_U0_ap_ready = 1'b0;
end

yuv_filter_p_yuv_channels_ch1 #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_yuv_channels_ch1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(rgb2yuv_1_U0_out_channels_ch1_address0),
    .i_ce0(rgb2yuv_1_U0_out_channels_ch1_ce0),
    .i_we0(rgb2yuv_1_U0_out_channels_ch1_we0),
    .i_d0(rgb2yuv_1_U0_out_channels_ch1_d0),
    .i_q0(p_yuv_channels_ch1_i_q0),
    .t_address0(yuv_scale_U0_in_channels_ch1_address0),
    .t_ce0(yuv_scale_U0_in_channels_ch1_ce0),
    .t_we0(1'b0),
    .t_d0(8'd0),
    .t_q0(p_yuv_channels_ch1_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(p_yuv_channels_ch1_i_full_n),
    .i_write(ap_channel_done_p_yuv_channels_ch1),
    .t_empty_n(p_yuv_channels_ch1_t_empty_n),
    .t_read(yuv_scale_U0_ap_ready)
);

yuv_filter_p_yuv_channels_ch1 #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_yuv_channels_ch2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(rgb2yuv_1_U0_out_channels_ch2_address0),
    .i_ce0(rgb2yuv_1_U0_out_channels_ch2_ce0),
    .i_we0(rgb2yuv_1_U0_out_channels_ch2_we0),
    .i_d0(rgb2yuv_1_U0_out_channels_ch2_d0),
    .i_q0(p_yuv_channels_ch2_i_q0),
    .t_address0(yuv_scale_U0_in_channels_ch2_address0),
    .t_ce0(yuv_scale_U0_in_channels_ch2_ce0),
    .t_we0(1'b0),
    .t_d0(8'd0),
    .t_q0(p_yuv_channels_ch2_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(p_yuv_channels_ch2_i_full_n),
    .i_write(ap_channel_done_p_yuv_channels_ch2),
    .t_empty_n(p_yuv_channels_ch2_t_empty_n),
    .t_read(yuv_scale_U0_ap_ready)
);

yuv_filter_p_yuv_channels_ch1 #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_yuv_channels_ch3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(rgb2yuv_1_U0_out_channels_ch3_address0),
    .i_ce0(rgb2yuv_1_U0_out_channels_ch3_ce0),
    .i_we0(rgb2yuv_1_U0_out_channels_ch3_we0),
    .i_d0(rgb2yuv_1_U0_out_channels_ch3_d0),
    .i_q0(p_yuv_channels_ch3_i_q0),
    .t_address0(yuv_scale_U0_in_channels_ch3_address0),
    .t_ce0(yuv_scale_U0_in_channels_ch3_ce0),
    .t_we0(1'b0),
    .t_d0(8'd0),
    .t_q0(p_yuv_channels_ch3_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(p_yuv_channels_ch3_i_full_n),
    .i_write(ap_channel_done_p_yuv_channels_ch3),
    .t_empty_n(p_yuv_channels_ch3_t_empty_n),
    .t_read(yuv_scale_U0_ap_ready)
);

yuv_filter_p_yuv_channels_ch1 #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_scale_channels_ch1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(yuv_scale_U0_out_channels_ch1_address0),
    .i_ce0(yuv_scale_U0_out_channels_ch1_ce0),
    .i_we0(yuv_scale_U0_out_channels_ch1_we0),
    .i_d0(yuv_scale_U0_out_channels_ch1_d0),
    .i_q0(p_scale_channels_ch1_i_q0),
    .t_address0(yuv2rgb_1_U0_in_channels_ch1_address0),
    .t_ce0(yuv2rgb_1_U0_in_channels_ch1_ce0),
    .t_we0(1'b0),
    .t_d0(8'd0),
    .t_q0(p_scale_channels_ch1_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(p_scale_channels_ch1_i_full_n),
    .i_write(ap_channel_done_p_scale_channels_ch1),
    .t_empty_n(p_scale_channels_ch1_t_empty_n),
    .t_read(yuv2rgb_1_U0_ap_ready)
);

yuv_filter_p_yuv_channels_ch1 #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_scale_channels_ch2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(yuv_scale_U0_out_channels_ch2_address0),
    .i_ce0(yuv_scale_U0_out_channels_ch2_ce0),
    .i_we0(yuv_scale_U0_out_channels_ch2_we0),
    .i_d0(yuv_scale_U0_out_channels_ch2_d0),
    .i_q0(p_scale_channels_ch2_i_q0),
    .t_address0(yuv2rgb_1_U0_in_channels_ch2_address0),
    .t_ce0(yuv2rgb_1_U0_in_channels_ch2_ce0),
    .t_we0(1'b0),
    .t_d0(8'd0),
    .t_q0(p_scale_channels_ch2_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(p_scale_channels_ch2_i_full_n),
    .i_write(ap_channel_done_p_scale_channels_ch2),
    .t_empty_n(p_scale_channels_ch2_t_empty_n),
    .t_read(yuv2rgb_1_U0_ap_ready)
);

yuv_filter_p_yuv_channels_ch1 #(
    .DataWidth( 8 ),
    .AddressRange( 2457600 ),
    .AddressWidth( 22 ))
p_scale_channels_ch3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(yuv_scale_U0_out_channels_ch3_address0),
    .i_ce0(yuv_scale_U0_out_channels_ch3_ce0),
    .i_we0(yuv_scale_U0_out_channels_ch3_we0),
    .i_d0(yuv_scale_U0_out_channels_ch3_d0),
    .i_q0(p_scale_channels_ch3_i_q0),
    .t_address0(yuv2rgb_1_U0_in_channels_ch3_address0),
    .t_ce0(yuv2rgb_1_U0_in_channels_ch3_ce0),
    .t_we0(1'b0),
    .t_d0(8'd0),
    .t_q0(p_scale_channels_ch3_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(p_scale_channels_ch3_i_full_n),
    .i_write(ap_channel_done_p_scale_channels_ch3),
    .t_empty_n(p_scale_channels_ch3_t_empty_n),
    .t_read(yuv2rgb_1_U0_ap_ready)
);

yuv_filter_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(entry_proc_U0_ap_start),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .Y_scale(Y_scale),
    .Y_scale_c_din(entry_proc_U0_Y_scale_c_din),
    .Y_scale_c_full_n(Y_scale_c_full_n),
    .Y_scale_c_write(entry_proc_U0_Y_scale_c_write),
    .U_scale(U_scale),
    .U_scale_c_din(entry_proc_U0_U_scale_c_din),
    .U_scale_c_full_n(U_scale_c_full_n),
    .U_scale_c_write(entry_proc_U0_U_scale_c_write),
    .V_scale(V_scale),
    .V_scale_c_din(entry_proc_U0_V_scale_c_din),
    .V_scale_c_full_n(V_scale_c_full_n),
    .V_scale_c_write(entry_proc_U0_V_scale_c_write)
);

yuv_filter_rgb2yuv_1 rgb2yuv_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(rgb2yuv_1_U0_ap_start),
    .ap_done(rgb2yuv_1_U0_ap_done),
    .ap_continue(rgb2yuv_1_U0_ap_continue),
    .ap_idle(rgb2yuv_1_U0_ap_idle),
    .ap_ready(rgb2yuv_1_U0_ap_ready),
    .in_channels_ch1_address0(rgb2yuv_1_U0_in_channels_ch1_address0),
    .in_channels_ch1_ce0(rgb2yuv_1_U0_in_channels_ch1_ce0),
    .in_channels_ch1_q0(in_channels_ch1_q0),
    .in_channels_ch2_address0(rgb2yuv_1_U0_in_channels_ch2_address0),
    .in_channels_ch2_ce0(rgb2yuv_1_U0_in_channels_ch2_ce0),
    .in_channels_ch2_q0(in_channels_ch2_q0),
    .in_channels_ch3_address0(rgb2yuv_1_U0_in_channels_ch3_address0),
    .in_channels_ch3_ce0(rgb2yuv_1_U0_in_channels_ch3_ce0),
    .in_channels_ch3_q0(in_channels_ch3_q0),
    .in_width(in_width),
    .in_height(in_height),
    .out_channels_ch1_address0(rgb2yuv_1_U0_out_channels_ch1_address0),
    .out_channels_ch1_ce0(rgb2yuv_1_U0_out_channels_ch1_ce0),
    .out_channels_ch1_we0(rgb2yuv_1_U0_out_channels_ch1_we0),
    .out_channels_ch1_d0(rgb2yuv_1_U0_out_channels_ch1_d0),
    .out_channels_ch2_address0(rgb2yuv_1_U0_out_channels_ch2_address0),
    .out_channels_ch2_ce0(rgb2yuv_1_U0_out_channels_ch2_ce0),
    .out_channels_ch2_we0(rgb2yuv_1_U0_out_channels_ch2_we0),
    .out_channels_ch2_d0(rgb2yuv_1_U0_out_channels_ch2_d0),
    .out_channels_ch3_address0(rgb2yuv_1_U0_out_channels_ch3_address0),
    .out_channels_ch3_ce0(rgb2yuv_1_U0_out_channels_ch3_ce0),
    .out_channels_ch3_we0(rgb2yuv_1_U0_out_channels_ch3_we0),
    .out_channels_ch3_d0(rgb2yuv_1_U0_out_channels_ch3_d0),
    .ap_return_0(rgb2yuv_1_U0_ap_return_0),
    .ap_return_1(rgb2yuv_1_U0_ap_return_1)
);

yuv_filter_yuv_scale yuv_scale_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(yuv_scale_U0_ap_start),
    .ap_done(yuv_scale_U0_ap_done),
    .ap_continue(yuv_scale_U0_ap_continue),
    .ap_idle(yuv_scale_U0_ap_idle),
    .ap_ready(yuv_scale_U0_ap_ready),
    .in_channels_ch1_address0(yuv_scale_U0_in_channels_ch1_address0),
    .in_channels_ch1_ce0(yuv_scale_U0_in_channels_ch1_ce0),
    .in_channels_ch1_q0(p_yuv_channels_ch1_t_q0),
    .in_channels_ch2_address0(yuv_scale_U0_in_channels_ch2_address0),
    .in_channels_ch2_ce0(yuv_scale_U0_in_channels_ch2_ce0),
    .in_channels_ch2_q0(p_yuv_channels_ch2_t_q0),
    .in_channels_ch3_address0(yuv_scale_U0_in_channels_ch3_address0),
    .in_channels_ch3_ce0(yuv_scale_U0_in_channels_ch3_ce0),
    .in_channels_ch3_q0(p_yuv_channels_ch3_t_q0),
    .in_width_read(p_yuv_width_dout),
    .in_height_read(p_yuv_height_dout),
    .out_channels_ch1_address0(yuv_scale_U0_out_channels_ch1_address0),
    .out_channels_ch1_ce0(yuv_scale_U0_out_channels_ch1_ce0),
    .out_channels_ch1_we0(yuv_scale_U0_out_channels_ch1_we0),
    .out_channels_ch1_d0(yuv_scale_U0_out_channels_ch1_d0),
    .out_channels_ch2_address0(yuv_scale_U0_out_channels_ch2_address0),
    .out_channels_ch2_ce0(yuv_scale_U0_out_channels_ch2_ce0),
    .out_channels_ch2_we0(yuv_scale_U0_out_channels_ch2_we0),
    .out_channels_ch2_d0(yuv_scale_U0_out_channels_ch2_d0),
    .out_channels_ch3_address0(yuv_scale_U0_out_channels_ch3_address0),
    .out_channels_ch3_ce0(yuv_scale_U0_out_channels_ch3_ce0),
    .out_channels_ch3_we0(yuv_scale_U0_out_channels_ch3_we0),
    .out_channels_ch3_d0(yuv_scale_U0_out_channels_ch3_d0),
    .Y_scale_dout(Y_scale_c_dout),
    .Y_scale_empty_n(Y_scale_c_empty_n),
    .Y_scale_read(yuv_scale_U0_Y_scale_read),
    .U_scale_dout(U_scale_c_dout),
    .U_scale_empty_n(U_scale_c_empty_n),
    .U_scale_read(yuv_scale_U0_U_scale_read),
    .V_scale_dout(V_scale_c_dout),
    .V_scale_empty_n(V_scale_c_empty_n),
    .V_scale_read(yuv_scale_U0_V_scale_read),
    .ap_return_0(yuv_scale_U0_ap_return_0),
    .ap_return_1(yuv_scale_U0_ap_return_1)
);

yuv_filter_yuv2rgb_1 yuv2rgb_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(yuv2rgb_1_U0_ap_start),
    .ap_done(yuv2rgb_1_U0_ap_done),
    .ap_continue(yuv2rgb_1_U0_ap_continue),
    .ap_idle(yuv2rgb_1_U0_ap_idle),
    .ap_ready(yuv2rgb_1_U0_ap_ready),
    .in_channels_ch1_address0(yuv2rgb_1_U0_in_channels_ch1_address0),
    .in_channels_ch1_ce0(yuv2rgb_1_U0_in_channels_ch1_ce0),
    .in_channels_ch1_q0(p_scale_channels_ch1_t_q0),
    .in_channels_ch2_address0(yuv2rgb_1_U0_in_channels_ch2_address0),
    .in_channels_ch2_ce0(yuv2rgb_1_U0_in_channels_ch2_ce0),
    .in_channels_ch2_q0(p_scale_channels_ch2_t_q0),
    .in_channels_ch3_address0(yuv2rgb_1_U0_in_channels_ch3_address0),
    .in_channels_ch3_ce0(yuv2rgb_1_U0_in_channels_ch3_ce0),
    .in_channels_ch3_q0(p_scale_channels_ch3_t_q0),
    .p_read(p_scale_width_dout),
    .p_read1(p_scale_height_dout),
    .out_channels_ch1_address0(yuv2rgb_1_U0_out_channels_ch1_address0),
    .out_channels_ch1_ce0(yuv2rgb_1_U0_out_channels_ch1_ce0),
    .out_channels_ch1_we0(yuv2rgb_1_U0_out_channels_ch1_we0),
    .out_channels_ch1_d0(yuv2rgb_1_U0_out_channels_ch1_d0),
    .out_channels_ch2_address0(yuv2rgb_1_U0_out_channels_ch2_address0),
    .out_channels_ch2_ce0(yuv2rgb_1_U0_out_channels_ch2_ce0),
    .out_channels_ch2_we0(yuv2rgb_1_U0_out_channels_ch2_we0),
    .out_channels_ch2_d0(yuv2rgb_1_U0_out_channels_ch2_d0),
    .out_channels_ch3_address0(yuv2rgb_1_U0_out_channels_ch3_address0),
    .out_channels_ch3_ce0(yuv2rgb_1_U0_out_channels_ch3_ce0),
    .out_channels_ch3_we0(yuv2rgb_1_U0_out_channels_ch3_we0),
    .out_channels_ch3_d0(yuv2rgb_1_U0_out_channels_ch3_d0),
    .out_width(yuv2rgb_1_U0_out_width),
    .out_width_ap_vld(yuv2rgb_1_U0_out_width_ap_vld),
    .out_height(yuv2rgb_1_U0_out_height),
    .out_height_ap_vld(yuv2rgb_1_U0_out_height_ap_vld)
);

yuv_filter_fifo_w8_d3_S Y_scale_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_Y_scale_c_din),
    .if_full_n(Y_scale_c_full_n),
    .if_write(entry_proc_U0_Y_scale_c_write),
    .if_dout(Y_scale_c_dout),
    .if_empty_n(Y_scale_c_empty_n),
    .if_read(yuv_scale_U0_Y_scale_read)
);

yuv_filter_fifo_w8_d3_S U_scale_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_U_scale_c_din),
    .if_full_n(U_scale_c_full_n),
    .if_write(entry_proc_U0_U_scale_c_write),
    .if_dout(U_scale_c_dout),
    .if_empty_n(U_scale_c_empty_n),
    .if_read(yuv_scale_U0_U_scale_read)
);

yuv_filter_fifo_w8_d3_S V_scale_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_V_scale_c_din),
    .if_full_n(V_scale_c_full_n),
    .if_write(entry_proc_U0_V_scale_c_write),
    .if_dout(V_scale_c_dout),
    .if_empty_n(V_scale_c_empty_n),
    .if_read(yuv_scale_U0_V_scale_read)
);

yuv_filter_fifo_w16_d2_S p_yuv_width_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rgb2yuv_1_U0_ap_return_0),
    .if_full_n(p_yuv_width_full_n),
    .if_write(ap_channel_done_p_yuv_width),
    .if_dout(p_yuv_width_dout),
    .if_empty_n(p_yuv_width_empty_n),
    .if_read(yuv_scale_U0_ap_ready)
);

yuv_filter_fifo_w16_d2_S p_yuv_height_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(rgb2yuv_1_U0_ap_return_1),
    .if_full_n(p_yuv_height_full_n),
    .if_write(ap_channel_done_p_yuv_height),
    .if_dout(p_yuv_height_dout),
    .if_empty_n(p_yuv_height_empty_n),
    .if_read(yuv_scale_U0_ap_ready)
);

yuv_filter_fifo_w16_d2_S p_scale_width_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(yuv_scale_U0_ap_return_0),
    .if_full_n(p_scale_width_full_n),
    .if_write(ap_channel_done_p_scale_width),
    .if_dout(p_scale_width_dout),
    .if_empty_n(p_scale_width_empty_n),
    .if_read(yuv2rgb_1_U0_ap_ready)
);

yuv_filter_fifo_w16_d2_S p_scale_height_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(yuv_scale_U0_ap_return_1),
    .if_full_n(p_scale_height_full_n),
    .if_write(ap_channel_done_p_scale_height),
    .if_dout(p_scale_height_dout),
    .if_empty_n(p_scale_height_empty_n),
    .if_read(yuv2rgb_1_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_p_scale_channels_ch1 <= 1'b0;
    end else begin
        if (((yuv_scale_U0_ap_done & yuv_scale_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_scale_channels_ch1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_scale_channels_ch1 <= ap_sync_channel_write_p_scale_channels_ch1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_p_scale_channels_ch2 <= 1'b0;
    end else begin
        if (((yuv_scale_U0_ap_done & yuv_scale_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_scale_channels_ch2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_scale_channels_ch2 <= ap_sync_channel_write_p_scale_channels_ch2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_p_scale_channels_ch3 <= 1'b0;
    end else begin
        if (((yuv_scale_U0_ap_done & yuv_scale_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_scale_channels_ch3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_scale_channels_ch3 <= ap_sync_channel_write_p_scale_channels_ch3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_p_scale_height <= 1'b0;
    end else begin
        if (((yuv_scale_U0_ap_done & yuv_scale_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_scale_height <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_scale_height <= ap_sync_channel_write_p_scale_height;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_p_scale_width <= 1'b0;
    end else begin
        if (((yuv_scale_U0_ap_done & yuv_scale_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_scale_width <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_scale_width <= ap_sync_channel_write_p_scale_width;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_p_yuv_channels_ch1 <= 1'b0;
    end else begin
        if (((rgb2yuv_1_U0_ap_done & rgb2yuv_1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_yuv_channels_ch1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_yuv_channels_ch1 <= ap_sync_channel_write_p_yuv_channels_ch1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_p_yuv_channels_ch2 <= 1'b0;
    end else begin
        if (((rgb2yuv_1_U0_ap_done & rgb2yuv_1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_yuv_channels_ch2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_yuv_channels_ch2 <= ap_sync_channel_write_p_yuv_channels_ch2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_p_yuv_channels_ch3 <= 1'b0;
    end else begin
        if (((rgb2yuv_1_U0_ap_done & rgb2yuv_1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_yuv_channels_ch3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_yuv_channels_ch3 <= ap_sync_channel_write_p_yuv_channels_ch3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_p_yuv_height <= 1'b0;
    end else begin
        if (((rgb2yuv_1_U0_ap_done & rgb2yuv_1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_yuv_height <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_yuv_height <= ap_sync_channel_write_p_yuv_height;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_p_yuv_width <= 1'b0;
    end else begin
        if (((rgb2yuv_1_U0_ap_done & rgb2yuv_1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_yuv_width <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_yuv_width <= ap_sync_channel_write_p_yuv_width;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_rgb2yuv_1_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_rgb2yuv_1_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_rgb2yuv_1_U0_ap_ready <= ap_sync_rgb2yuv_1_U0_ap_ready;
        end
    end
end

assign ap_channel_done_p_scale_channels_ch1 = (yuv_scale_U0_ap_done & (ap_sync_reg_channel_write_p_scale_channels_ch1 ^ 1'b1));

assign ap_channel_done_p_scale_channels_ch2 = (yuv_scale_U0_ap_done & (ap_sync_reg_channel_write_p_scale_channels_ch2 ^ 1'b1));

assign ap_channel_done_p_scale_channels_ch3 = (yuv_scale_U0_ap_done & (ap_sync_reg_channel_write_p_scale_channels_ch3 ^ 1'b1));

assign ap_channel_done_p_scale_height = (yuv_scale_U0_ap_done & (ap_sync_reg_channel_write_p_scale_height ^ 1'b1));

assign ap_channel_done_p_scale_width = (yuv_scale_U0_ap_done & (ap_sync_reg_channel_write_p_scale_width ^ 1'b1));

assign ap_channel_done_p_yuv_channels_ch1 = (rgb2yuv_1_U0_ap_done & (ap_sync_reg_channel_write_p_yuv_channels_ch1 ^ 1'b1));

assign ap_channel_done_p_yuv_channels_ch2 = (rgb2yuv_1_U0_ap_done & (ap_sync_reg_channel_write_p_yuv_channels_ch2 ^ 1'b1));

assign ap_channel_done_p_yuv_channels_ch3 = (rgb2yuv_1_U0_ap_done & (ap_sync_reg_channel_write_p_yuv_channels_ch3 ^ 1'b1));

assign ap_channel_done_p_yuv_height = (rgb2yuv_1_U0_ap_done & (ap_sync_reg_channel_write_p_yuv_height ^ 1'b1));

assign ap_channel_done_p_yuv_width = (rgb2yuv_1_U0_ap_done & (ap_sync_reg_channel_write_p_yuv_width ^ 1'b1));

assign ap_done = yuv2rgb_1_U0_ap_done;

assign ap_idle = (yuv_scale_U0_ap_idle & yuv2rgb_1_U0_ap_idle & rgb2yuv_1_U0_ap_idle & (p_scale_height_empty_n ^ 1'b1) & (p_scale_width_empty_n ^ 1'b1) & (p_yuv_height_empty_n ^ 1'b1) & (p_yuv_width_empty_n ^ 1'b1) & (p_scale_channels_ch3_t_empty_n ^ 1'b1) & (p_scale_channels_ch2_t_empty_n ^ 1'b1) & (p_scale_channels_ch1_t_empty_n ^ 1'b1) & (p_yuv_channels_ch3_t_empty_n ^ 1'b1) & (p_yuv_channels_ch2_t_empty_n ^ 1'b1) & (p_yuv_channels_ch1_t_empty_n ^ 1'b1) & entry_proc_U0_ap_idle);

assign ap_ready = ap_sync_ready;

assign ap_sync_channel_write_p_scale_channels_ch1 = ((yuv_scale_U0_out_channels_ch1_full_n & ap_channel_done_p_scale_channels_ch1) | ap_sync_reg_channel_write_p_scale_channels_ch1);

assign ap_sync_channel_write_p_scale_channels_ch2 = ((yuv_scale_U0_out_channels_ch2_full_n & ap_channel_done_p_scale_channels_ch2) | ap_sync_reg_channel_write_p_scale_channels_ch2);

assign ap_sync_channel_write_p_scale_channels_ch3 = ((yuv_scale_U0_out_channels_ch3_full_n & ap_channel_done_p_scale_channels_ch3) | ap_sync_reg_channel_write_p_scale_channels_ch3);

assign ap_sync_channel_write_p_scale_height = ((p_scale_height_full_n & ap_channel_done_p_scale_height) | ap_sync_reg_channel_write_p_scale_height);

assign ap_sync_channel_write_p_scale_width = ((p_scale_width_full_n & ap_channel_done_p_scale_width) | ap_sync_reg_channel_write_p_scale_width);

assign ap_sync_channel_write_p_yuv_channels_ch1 = ((rgb2yuv_1_U0_out_channels_ch1_full_n & ap_channel_done_p_yuv_channels_ch1) | ap_sync_reg_channel_write_p_yuv_channels_ch1);

assign ap_sync_channel_write_p_yuv_channels_ch2 = ((rgb2yuv_1_U0_out_channels_ch2_full_n & ap_channel_done_p_yuv_channels_ch2) | ap_sync_reg_channel_write_p_yuv_channels_ch2);

assign ap_sync_channel_write_p_yuv_channels_ch3 = ((rgb2yuv_1_U0_out_channels_ch3_full_n & ap_channel_done_p_yuv_channels_ch3) | ap_sync_reg_channel_write_p_yuv_channels_ch3);

assign ap_sync_channel_write_p_yuv_height = ((p_yuv_height_full_n & ap_channel_done_p_yuv_height) | ap_sync_reg_channel_write_p_yuv_height);

assign ap_sync_channel_write_p_yuv_width = ((p_yuv_width_full_n & ap_channel_done_p_yuv_width) | ap_sync_reg_channel_write_p_yuv_width);

assign ap_sync_entry_proc_U0_ap_ready = (entry_proc_U0_ap_ready | ap_sync_reg_entry_proc_U0_ap_ready);

assign ap_sync_ready = (ap_sync_rgb2yuv_1_U0_ap_ready & ap_sync_entry_proc_U0_ap_ready);

assign ap_sync_rgb2yuv_1_U0_ap_ready = (rgb2yuv_1_U0_ap_ready | ap_sync_reg_rgb2yuv_1_U0_ap_ready);

assign entry_proc_U0_ap_continue = 1'b1;

assign entry_proc_U0_ap_start = ((ap_sync_reg_entry_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign in_channels_ch1_address0 = rgb2yuv_1_U0_in_channels_ch1_address0;

assign in_channels_ch1_address1 = 22'd0;

assign in_channels_ch1_ce0 = rgb2yuv_1_U0_in_channels_ch1_ce0;

assign in_channels_ch1_ce1 = 1'b0;

assign in_channels_ch1_d0 = 8'd0;

assign in_channels_ch1_d1 = 8'd0;

assign in_channels_ch1_we0 = 1'b0;

assign in_channels_ch1_we1 = 1'b0;

assign in_channels_ch2_address0 = rgb2yuv_1_U0_in_channels_ch2_address0;

assign in_channels_ch2_address1 = 22'd0;

assign in_channels_ch2_ce0 = rgb2yuv_1_U0_in_channels_ch2_ce0;

assign in_channels_ch2_ce1 = 1'b0;

assign in_channels_ch2_d0 = 8'd0;

assign in_channels_ch2_d1 = 8'd0;

assign in_channels_ch2_we0 = 1'b0;

assign in_channels_ch2_we1 = 1'b0;

assign in_channels_ch3_address0 = rgb2yuv_1_U0_in_channels_ch3_address0;

assign in_channels_ch3_address1 = 22'd0;

assign in_channels_ch3_ce0 = rgb2yuv_1_U0_in_channels_ch3_ce0;

assign in_channels_ch3_ce1 = 1'b0;

assign in_channels_ch3_d0 = 8'd0;

assign in_channels_ch3_d1 = 8'd0;

assign in_channels_ch3_we0 = 1'b0;

assign in_channels_ch3_we1 = 1'b0;

assign out_channels_ch1_address0 = yuv2rgb_1_U0_out_channels_ch1_address0;

assign out_channels_ch1_address1 = 22'd0;

assign out_channels_ch1_ce0 = yuv2rgb_1_U0_out_channels_ch1_ce0;

assign out_channels_ch1_ce1 = 1'b0;

assign out_channels_ch1_d0 = yuv2rgb_1_U0_out_channels_ch1_d0;

assign out_channels_ch1_d1 = 8'd0;

assign out_channels_ch1_we0 = yuv2rgb_1_U0_out_channels_ch1_we0;

assign out_channels_ch1_we1 = 1'b0;

assign out_channels_ch2_address0 = yuv2rgb_1_U0_out_channels_ch2_address0;

assign out_channels_ch2_address1 = 22'd0;

assign out_channels_ch2_ce0 = yuv2rgb_1_U0_out_channels_ch2_ce0;

assign out_channels_ch2_ce1 = 1'b0;

assign out_channels_ch2_d0 = yuv2rgb_1_U0_out_channels_ch2_d0;

assign out_channels_ch2_d1 = 8'd0;

assign out_channels_ch2_we0 = yuv2rgb_1_U0_out_channels_ch2_we0;

assign out_channels_ch2_we1 = 1'b0;

assign out_channels_ch3_address0 = yuv2rgb_1_U0_out_channels_ch3_address0;

assign out_channels_ch3_address1 = 22'd0;

assign out_channels_ch3_ce0 = yuv2rgb_1_U0_out_channels_ch3_ce0;

assign out_channels_ch3_ce1 = 1'b0;

assign out_channels_ch3_d0 = yuv2rgb_1_U0_out_channels_ch3_d0;

assign out_channels_ch3_d1 = 8'd0;

assign out_channels_ch3_we0 = yuv2rgb_1_U0_out_channels_ch3_we0;

assign out_channels_ch3_we1 = 1'b0;

assign out_height = yuv2rgb_1_U0_out_height;

assign out_height_ap_vld = yuv2rgb_1_U0_out_height_ap_vld;

assign out_width = yuv2rgb_1_U0_out_width;

assign out_width_ap_vld = yuv2rgb_1_U0_out_width_ap_vld;

assign rgb2yuv_1_U0_ap_continue = (ap_sync_channel_write_p_yuv_width & ap_sync_channel_write_p_yuv_height & ap_sync_channel_write_p_yuv_channels_ch3 & ap_sync_channel_write_p_yuv_channels_ch2 & ap_sync_channel_write_p_yuv_channels_ch1);

assign rgb2yuv_1_U0_ap_start = ((ap_sync_reg_rgb2yuv_1_U0_ap_ready ^ 1'b1) & ap_start);

assign rgb2yuv_1_U0_out_channels_ch1_full_n = p_yuv_channels_ch1_i_full_n;

assign rgb2yuv_1_U0_out_channels_ch2_full_n = p_yuv_channels_ch2_i_full_n;

assign rgb2yuv_1_U0_out_channels_ch3_full_n = p_yuv_channels_ch3_i_full_n;

assign yuv2rgb_1_U0_ap_continue = 1'b1;

assign yuv2rgb_1_U0_ap_start = (p_scale_width_empty_n & p_scale_height_empty_n & p_scale_channels_ch3_t_empty_n & p_scale_channels_ch2_t_empty_n & p_scale_channels_ch1_t_empty_n);

assign yuv_scale_U0_ap_continue = (ap_sync_channel_write_p_scale_width & ap_sync_channel_write_p_scale_height & ap_sync_channel_write_p_scale_channels_ch3 & ap_sync_channel_write_p_scale_channels_ch2 & ap_sync_channel_write_p_scale_channels_ch1);

assign yuv_scale_U0_ap_start = (p_yuv_width_empty_n & p_yuv_height_empty_n & p_yuv_channels_ch3_t_empty_n & p_yuv_channels_ch2_t_empty_n & p_yuv_channels_ch1_t_empty_n);

assign yuv_scale_U0_out_channels_ch1_full_n = p_scale_channels_ch1_i_full_n;

assign yuv_scale_U0_out_channels_ch2_full_n = p_scale_channels_ch2_i_full_n;

assign yuv_scale_U0_out_channels_ch3_full_n = p_scale_channels_ch3_i_full_n;


// synthesis translate_off
`include "yuv_filter_hls_deadlock_detector.vh"
// synthesis translate_on


// synthesis translate_off
`include "yuv_filter_hls_deadlock_detector.vh"
// synthesis translate_on


// synthesis translate_off
`include "yuv_filter_hls_deadlock_detector.vh"
// synthesis translate_on


// synthesis translate_off
`include "yuv_filter_hls_deadlock_detector.vh"
// synthesis translate_on


// synthesis translate_off
`include "yuv_filter_hls_deadlock_detector.vh"
// synthesis translate_on

endmodule //yuv_filter





