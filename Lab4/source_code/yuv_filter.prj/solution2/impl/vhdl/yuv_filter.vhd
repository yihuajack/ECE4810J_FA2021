-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1.1 (64-bit)
-- Version: 2021.1.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity yuv_filter is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    in_channels_ch1_ce0 : OUT STD_LOGIC;
    in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    in_channels_ch2_ce0 : OUT STD_LOGIC;
    in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    in_channels_ch3_ce0 : OUT STD_LOGIC;
    in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    in_width : IN STD_LOGIC_VECTOR (15 downto 0);
    in_height : IN STD_LOGIC_VECTOR (15 downto 0);
    out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch1_ce0 : OUT STD_LOGIC;
    out_channels_ch1_we0 : OUT STD_LOGIC;
    out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch2_ce0 : OUT STD_LOGIC;
    out_channels_ch2_we0 : OUT STD_LOGIC;
    out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
    out_channels_ch3_ce0 : OUT STD_LOGIC;
    out_channels_ch3_we0 : OUT STD_LOGIC;
    out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_width : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_width_ap_vld : OUT STD_LOGIC;
    out_height : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_height_ap_vld : OUT STD_LOGIC;
    Y_scale : IN STD_LOGIC_VECTOR (7 downto 0);
    U_scale : IN STD_LOGIC_VECTOR (7 downto 0);
    V_scale : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of yuv_filter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "yuv_filter_yuv_filter,hls_ip_2021_1_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.960500,HLS_SYN_LAT=2353238,HLS_SYN_TPT=none,HLS_SYN_MEM=12288,HLS_SYN_DSP=0,HLS_SYN_FF=1049,HLS_SYN_LUT=1767,HLS_VERSION=2021_1_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_yuv_width_reg_215 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal p_yuv_height_reg_220 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal p_scale_width_reg_240 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal p_scale_height_reg_245 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_yuv_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_yuv_channels_ch1_ce0 : STD_LOGIC;
    signal p_yuv_channels_ch1_we0 : STD_LOGIC;
    signal p_yuv_channels_ch1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_yuv_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_yuv_channels_ch2_ce0 : STD_LOGIC;
    signal p_yuv_channels_ch2_we0 : STD_LOGIC;
    signal p_yuv_channels_ch2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_yuv_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_yuv_channels_ch3_ce0 : STD_LOGIC;
    signal p_yuv_channels_ch3_we0 : STD_LOGIC;
    signal p_yuv_channels_ch3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_scale_channels_ch1_ce0 : STD_LOGIC;
    signal p_scale_channels_ch1_we0 : STD_LOGIC;
    signal p_scale_channels_ch1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_scale_channels_ch2_ce0 : STD_LOGIC;
    signal p_scale_channels_ch2_we0 : STD_LOGIC;
    signal p_scale_channels_ch2_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_scale_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal p_scale_channels_ch3_ce0 : STD_LOGIC;
    signal p_scale_channels_ch3_we0 : STD_LOGIC;
    signal p_scale_channels_ch3_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rgb2yuv_1_fu_126_ap_start : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_126_ap_done : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_126_ap_idle : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_126_ap_ready : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_126_in_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_rgb2yuv_1_fu_126_in_channels_ch1_ce0 : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_126_in_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_rgb2yuv_1_fu_126_in_channels_ch2_ce0 : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_126_in_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_rgb2yuv_1_fu_126_in_channels_ch3_ce0 : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_126_out_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_rgb2yuv_1_fu_126_out_channels_ch1_ce0 : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_126_out_channels_ch1_we0 : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_126_out_channels_ch1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rgb2yuv_1_fu_126_out_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_rgb2yuv_1_fu_126_out_channels_ch2_ce0 : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_126_out_channels_ch2_we0 : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_126_out_channels_ch2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rgb2yuv_1_fu_126_out_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_rgb2yuv_1_fu_126_out_channels_ch3_ce0 : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_126_out_channels_ch3_we0 : STD_LOGIC;
    signal grp_rgb2yuv_1_fu_126_out_channels_ch3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_rgb2yuv_1_fu_126_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_rgb2yuv_1_fu_126_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_scale_fu_146_ap_start : STD_LOGIC;
    signal grp_yuv_scale_fu_146_ap_done : STD_LOGIC;
    signal grp_yuv_scale_fu_146_ap_idle : STD_LOGIC;
    signal grp_yuv_scale_fu_146_ap_ready : STD_LOGIC;
    signal grp_yuv_scale_fu_146_in_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_scale_fu_146_in_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv_scale_fu_146_in_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_scale_fu_146_in_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv_scale_fu_146_in_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_scale_fu_146_in_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv_scale_fu_146_out_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_scale_fu_146_out_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv_scale_fu_146_out_channels_ch1_we0 : STD_LOGIC;
    signal grp_yuv_scale_fu_146_out_channels_ch1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_scale_fu_146_out_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_scale_fu_146_out_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv_scale_fu_146_out_channels_ch2_we0 : STD_LOGIC;
    signal grp_yuv_scale_fu_146_out_channels_ch2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_scale_fu_146_out_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv_scale_fu_146_out_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv_scale_fu_146_out_channels_ch3_we0 : STD_LOGIC;
    signal grp_yuv_scale_fu_146_out_channels_ch3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv_scale_fu_146_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv_scale_fu_146_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv2rgb_1_fu_164_ap_start : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_164_ap_done : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_164_ap_idle : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_164_ap_ready : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_164_in_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv2rgb_1_fu_164_in_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_164_in_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv2rgb_1_fu_164_in_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_164_in_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv2rgb_1_fu_164_in_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_164_out_channels_ch1_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv2rgb_1_fu_164_out_channels_ch1_ce0 : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_164_out_channels_ch1_we0 : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_164_out_channels_ch1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv2rgb_1_fu_164_out_channels_ch2_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv2rgb_1_fu_164_out_channels_ch2_ce0 : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_164_out_channels_ch2_we0 : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_164_out_channels_ch2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv2rgb_1_fu_164_out_channels_ch3_address0 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_yuv2rgb_1_fu_164_out_channels_ch3_ce0 : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_164_out_channels_ch3_we0 : STD_LOGIC;
    signal grp_yuv2rgb_1_fu_164_out_channels_ch3_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_yuv2rgb_1_fu_164_ap_return_0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_yuv2rgb_1_fu_164_ap_return_1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_rgb2yuv_1_fu_126_ap_start_reg : STD_LOGIC := '0';
    signal grp_yuv_scale_fu_146_ap_start_reg : STD_LOGIC := '0';
    signal grp_yuv2rgb_1_fu_164_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component yuv_filter_rgb2yuv_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch1_ce0 : OUT STD_LOGIC;
        in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch2_ce0 : OUT STD_LOGIC;
        in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch3_ce0 : OUT STD_LOGIC;
        in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
        out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch1_ce0 : OUT STD_LOGIC;
        out_channels_ch1_we0 : OUT STD_LOGIC;
        out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch2_ce0 : OUT STD_LOGIC;
        out_channels_ch2_we0 : OUT STD_LOGIC;
        out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch3_ce0 : OUT STD_LOGIC;
        out_channels_ch3_we0 : OUT STD_LOGIC;
        out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component yuv_filter_yuv_scale IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch1_ce0 : OUT STD_LOGIC;
        in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch2_ce0 : OUT STD_LOGIC;
        in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch3_ce0 : OUT STD_LOGIC;
        in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_width_read : IN STD_LOGIC_VECTOR (15 downto 0);
        in_height_read : IN STD_LOGIC_VECTOR (15 downto 0);
        out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch1_ce0 : OUT STD_LOGIC;
        out_channels_ch1_we0 : OUT STD_LOGIC;
        out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch2_ce0 : OUT STD_LOGIC;
        out_channels_ch2_we0 : OUT STD_LOGIC;
        out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch3_ce0 : OUT STD_LOGIC;
        out_channels_ch3_we0 : OUT STD_LOGIC;
        out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        Y_scale : IN STD_LOGIC_VECTOR (7 downto 0);
        U_scale : IN STD_LOGIC_VECTOR (7 downto 0);
        V_scale : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component yuv_filter_yuv2rgb_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch1_ce0 : OUT STD_LOGIC;
        in_channels_ch1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch2_ce0 : OUT STD_LOGIC;
        in_channels_ch2_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        in_channels_ch3_ce0 : OUT STD_LOGIC;
        in_channels_ch3_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read : IN STD_LOGIC_VECTOR (15 downto 0);
        p_read1 : IN STD_LOGIC_VECTOR (15 downto 0);
        out_channels_ch1_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch1_ce0 : OUT STD_LOGIC;
        out_channels_ch1_we0 : OUT STD_LOGIC;
        out_channels_ch1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch2_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch2_ce0 : OUT STD_LOGIC;
        out_channels_ch2_we0 : OUT STD_LOGIC;
        out_channels_ch2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        out_channels_ch3_address0 : OUT STD_LOGIC_VECTOR (21 downto 0);
        out_channels_ch3_ce0 : OUT STD_LOGIC;
        out_channels_ch3_we0 : OUT STD_LOGIC;
        out_channels_ch3_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component yuv_filter_p_yuv_channels_ch1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (21 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    p_yuv_channels_ch1_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_yuv_channels_ch1_address0,
        ce0 => p_yuv_channels_ch1_ce0,
        we0 => p_yuv_channels_ch1_we0,
        d0 => grp_rgb2yuv_1_fu_126_out_channels_ch1_d0,
        q0 => p_yuv_channels_ch1_q0);

    p_yuv_channels_ch2_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_yuv_channels_ch2_address0,
        ce0 => p_yuv_channels_ch2_ce0,
        we0 => p_yuv_channels_ch2_we0,
        d0 => grp_rgb2yuv_1_fu_126_out_channels_ch2_d0,
        q0 => p_yuv_channels_ch2_q0);

    p_yuv_channels_ch3_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_yuv_channels_ch3_address0,
        ce0 => p_yuv_channels_ch3_ce0,
        we0 => p_yuv_channels_ch3_we0,
        d0 => grp_rgb2yuv_1_fu_126_out_channels_ch3_d0,
        q0 => p_yuv_channels_ch3_q0);

    p_scale_channels_ch1_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_scale_channels_ch1_address0,
        ce0 => p_scale_channels_ch1_ce0,
        we0 => p_scale_channels_ch1_we0,
        d0 => grp_yuv_scale_fu_146_out_channels_ch1_d0,
        q0 => p_scale_channels_ch1_q0);

    p_scale_channels_ch2_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_scale_channels_ch2_address0,
        ce0 => p_scale_channels_ch2_ce0,
        we0 => p_scale_channels_ch2_we0,
        d0 => grp_yuv_scale_fu_146_out_channels_ch2_d0,
        q0 => p_scale_channels_ch2_q0);

    p_scale_channels_ch3_U : component yuv_filter_p_yuv_channels_ch1
    generic map (
        DataWidth => 8,
        AddressRange => 2457600,
        AddressWidth => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_scale_channels_ch3_address0,
        ce0 => p_scale_channels_ch3_ce0,
        we0 => p_scale_channels_ch3_we0,
        d0 => grp_yuv_scale_fu_146_out_channels_ch3_d0,
        q0 => p_scale_channels_ch3_q0);

    grp_rgb2yuv_1_fu_126 : component yuv_filter_rgb2yuv_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_rgb2yuv_1_fu_126_ap_start,
        ap_done => grp_rgb2yuv_1_fu_126_ap_done,
        ap_idle => grp_rgb2yuv_1_fu_126_ap_idle,
        ap_ready => grp_rgb2yuv_1_fu_126_ap_ready,
        in_channels_ch1_address0 => grp_rgb2yuv_1_fu_126_in_channels_ch1_address0,
        in_channels_ch1_ce0 => grp_rgb2yuv_1_fu_126_in_channels_ch1_ce0,
        in_channels_ch1_q0 => in_channels_ch1_q0,
        in_channels_ch2_address0 => grp_rgb2yuv_1_fu_126_in_channels_ch2_address0,
        in_channels_ch2_ce0 => grp_rgb2yuv_1_fu_126_in_channels_ch2_ce0,
        in_channels_ch2_q0 => in_channels_ch2_q0,
        in_channels_ch3_address0 => grp_rgb2yuv_1_fu_126_in_channels_ch3_address0,
        in_channels_ch3_ce0 => grp_rgb2yuv_1_fu_126_in_channels_ch3_ce0,
        in_channels_ch3_q0 => in_channels_ch3_q0,
        p_read => in_width,
        p_read1 => in_height,
        out_channels_ch1_address0 => grp_rgb2yuv_1_fu_126_out_channels_ch1_address0,
        out_channels_ch1_ce0 => grp_rgb2yuv_1_fu_126_out_channels_ch1_ce0,
        out_channels_ch1_we0 => grp_rgb2yuv_1_fu_126_out_channels_ch1_we0,
        out_channels_ch1_d0 => grp_rgb2yuv_1_fu_126_out_channels_ch1_d0,
        out_channels_ch2_address0 => grp_rgb2yuv_1_fu_126_out_channels_ch2_address0,
        out_channels_ch2_ce0 => grp_rgb2yuv_1_fu_126_out_channels_ch2_ce0,
        out_channels_ch2_we0 => grp_rgb2yuv_1_fu_126_out_channels_ch2_we0,
        out_channels_ch2_d0 => grp_rgb2yuv_1_fu_126_out_channels_ch2_d0,
        out_channels_ch3_address0 => grp_rgb2yuv_1_fu_126_out_channels_ch3_address0,
        out_channels_ch3_ce0 => grp_rgb2yuv_1_fu_126_out_channels_ch3_ce0,
        out_channels_ch3_we0 => grp_rgb2yuv_1_fu_126_out_channels_ch3_we0,
        out_channels_ch3_d0 => grp_rgb2yuv_1_fu_126_out_channels_ch3_d0,
        ap_return_0 => grp_rgb2yuv_1_fu_126_ap_return_0,
        ap_return_1 => grp_rgb2yuv_1_fu_126_ap_return_1);

    grp_yuv_scale_fu_146 : component yuv_filter_yuv_scale
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_yuv_scale_fu_146_ap_start,
        ap_done => grp_yuv_scale_fu_146_ap_done,
        ap_idle => grp_yuv_scale_fu_146_ap_idle,
        ap_ready => grp_yuv_scale_fu_146_ap_ready,
        in_channels_ch1_address0 => grp_yuv_scale_fu_146_in_channels_ch1_address0,
        in_channels_ch1_ce0 => grp_yuv_scale_fu_146_in_channels_ch1_ce0,
        in_channels_ch1_q0 => p_yuv_channels_ch1_q0,
        in_channels_ch2_address0 => grp_yuv_scale_fu_146_in_channels_ch2_address0,
        in_channels_ch2_ce0 => grp_yuv_scale_fu_146_in_channels_ch2_ce0,
        in_channels_ch2_q0 => p_yuv_channels_ch2_q0,
        in_channels_ch3_address0 => grp_yuv_scale_fu_146_in_channels_ch3_address0,
        in_channels_ch3_ce0 => grp_yuv_scale_fu_146_in_channels_ch3_ce0,
        in_channels_ch3_q0 => p_yuv_channels_ch3_q0,
        in_width_read => p_yuv_width_reg_215,
        in_height_read => p_yuv_height_reg_220,
        out_channels_ch1_address0 => grp_yuv_scale_fu_146_out_channels_ch1_address0,
        out_channels_ch1_ce0 => grp_yuv_scale_fu_146_out_channels_ch1_ce0,
        out_channels_ch1_we0 => grp_yuv_scale_fu_146_out_channels_ch1_we0,
        out_channels_ch1_d0 => grp_yuv_scale_fu_146_out_channels_ch1_d0,
        out_channels_ch2_address0 => grp_yuv_scale_fu_146_out_channels_ch2_address0,
        out_channels_ch2_ce0 => grp_yuv_scale_fu_146_out_channels_ch2_ce0,
        out_channels_ch2_we0 => grp_yuv_scale_fu_146_out_channels_ch2_we0,
        out_channels_ch2_d0 => grp_yuv_scale_fu_146_out_channels_ch2_d0,
        out_channels_ch3_address0 => grp_yuv_scale_fu_146_out_channels_ch3_address0,
        out_channels_ch3_ce0 => grp_yuv_scale_fu_146_out_channels_ch3_ce0,
        out_channels_ch3_we0 => grp_yuv_scale_fu_146_out_channels_ch3_we0,
        out_channels_ch3_d0 => grp_yuv_scale_fu_146_out_channels_ch3_d0,
        Y_scale => Y_scale,
        U_scale => U_scale,
        V_scale => V_scale,
        ap_return_0 => grp_yuv_scale_fu_146_ap_return_0,
        ap_return_1 => grp_yuv_scale_fu_146_ap_return_1);

    grp_yuv2rgb_1_fu_164 : component yuv_filter_yuv2rgb_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_yuv2rgb_1_fu_164_ap_start,
        ap_done => grp_yuv2rgb_1_fu_164_ap_done,
        ap_idle => grp_yuv2rgb_1_fu_164_ap_idle,
        ap_ready => grp_yuv2rgb_1_fu_164_ap_ready,
        in_channels_ch1_address0 => grp_yuv2rgb_1_fu_164_in_channels_ch1_address0,
        in_channels_ch1_ce0 => grp_yuv2rgb_1_fu_164_in_channels_ch1_ce0,
        in_channels_ch1_q0 => p_scale_channels_ch1_q0,
        in_channels_ch2_address0 => grp_yuv2rgb_1_fu_164_in_channels_ch2_address0,
        in_channels_ch2_ce0 => grp_yuv2rgb_1_fu_164_in_channels_ch2_ce0,
        in_channels_ch2_q0 => p_scale_channels_ch2_q0,
        in_channels_ch3_address0 => grp_yuv2rgb_1_fu_164_in_channels_ch3_address0,
        in_channels_ch3_ce0 => grp_yuv2rgb_1_fu_164_in_channels_ch3_ce0,
        in_channels_ch3_q0 => p_scale_channels_ch3_q0,
        p_read => p_scale_width_reg_240,
        p_read1 => p_scale_height_reg_245,
        out_channels_ch1_address0 => grp_yuv2rgb_1_fu_164_out_channels_ch1_address0,
        out_channels_ch1_ce0 => grp_yuv2rgb_1_fu_164_out_channels_ch1_ce0,
        out_channels_ch1_we0 => grp_yuv2rgb_1_fu_164_out_channels_ch1_we0,
        out_channels_ch1_d0 => grp_yuv2rgb_1_fu_164_out_channels_ch1_d0,
        out_channels_ch2_address0 => grp_yuv2rgb_1_fu_164_out_channels_ch2_address0,
        out_channels_ch2_ce0 => grp_yuv2rgb_1_fu_164_out_channels_ch2_ce0,
        out_channels_ch2_we0 => grp_yuv2rgb_1_fu_164_out_channels_ch2_we0,
        out_channels_ch2_d0 => grp_yuv2rgb_1_fu_164_out_channels_ch2_d0,
        out_channels_ch3_address0 => grp_yuv2rgb_1_fu_164_out_channels_ch3_address0,
        out_channels_ch3_ce0 => grp_yuv2rgb_1_fu_164_out_channels_ch3_ce0,
        out_channels_ch3_we0 => grp_yuv2rgb_1_fu_164_out_channels_ch3_we0,
        out_channels_ch3_d0 => grp_yuv2rgb_1_fu_164_out_channels_ch3_d0,
        ap_return_0 => grp_yuv2rgb_1_fu_164_ap_return_0,
        ap_return_1 => grp_yuv2rgb_1_fu_164_ap_return_1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_rgb2yuv_1_fu_126_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_rgb2yuv_1_fu_126_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_rgb2yuv_1_fu_126_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_rgb2yuv_1_fu_126_ap_ready = ap_const_logic_1)) then 
                    grp_rgb2yuv_1_fu_126_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_yuv2rgb_1_fu_164_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_yuv2rgb_1_fu_164_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    grp_yuv2rgb_1_fu_164_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_yuv2rgb_1_fu_164_ap_ready = ap_const_logic_1)) then 
                    grp_yuv2rgb_1_fu_164_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_yuv_scale_fu_146_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_yuv_scale_fu_146_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_yuv_scale_fu_146_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_yuv_scale_fu_146_ap_ready = ap_const_logic_1)) then 
                    grp_yuv_scale_fu_146_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                p_scale_height_reg_245 <= grp_yuv_scale_fu_146_ap_return_1;
                p_scale_width_reg_240 <= grp_yuv_scale_fu_146_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                p_yuv_height_reg_220 <= grp_rgb2yuv_1_fu_126_ap_return_1;
                p_yuv_width_reg_215 <= grp_rgb2yuv_1_fu_126_ap_return_0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state4, grp_rgb2yuv_1_fu_126_ap_done, grp_yuv_scale_fu_146_ap_done, grp_yuv2rgb_1_fu_164_ap_done, ap_CS_fsm_state6)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_rgb2yuv_1_fu_126_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_yuv_scale_fu_146_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_yuv2rgb_1_fu_164_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_rgb2yuv_1_fu_126_ap_done)
    begin
        if ((grp_rgb2yuv_1_fu_126_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_yuv_scale_fu_146_ap_done)
    begin
        if ((grp_yuv_scale_fu_146_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_yuv2rgb_1_fu_164_ap_done)
    begin
        if ((grp_yuv2rgb_1_fu_164_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(grp_yuv2rgb_1_fu_164_ap_done, ap_CS_fsm_state6)
    begin
        if (((grp_yuv2rgb_1_fu_164_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_yuv2rgb_1_fu_164_ap_done, ap_CS_fsm_state6)
    begin
        if (((grp_yuv2rgb_1_fu_164_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_rgb2yuv_1_fu_126_ap_start <= grp_rgb2yuv_1_fu_126_ap_start_reg;
    grp_yuv2rgb_1_fu_164_ap_start <= grp_yuv2rgb_1_fu_164_ap_start_reg;
    grp_yuv_scale_fu_146_ap_start <= grp_yuv_scale_fu_146_ap_start_reg;
    in_channels_ch1_address0 <= grp_rgb2yuv_1_fu_126_in_channels_ch1_address0;
    in_channels_ch1_ce0 <= grp_rgb2yuv_1_fu_126_in_channels_ch1_ce0;
    in_channels_ch2_address0 <= grp_rgb2yuv_1_fu_126_in_channels_ch2_address0;
    in_channels_ch2_ce0 <= grp_rgb2yuv_1_fu_126_in_channels_ch2_ce0;
    in_channels_ch3_address0 <= grp_rgb2yuv_1_fu_126_in_channels_ch3_address0;
    in_channels_ch3_ce0 <= grp_rgb2yuv_1_fu_126_in_channels_ch3_ce0;
    out_channels_ch1_address0 <= grp_yuv2rgb_1_fu_164_out_channels_ch1_address0;
    out_channels_ch1_ce0 <= grp_yuv2rgb_1_fu_164_out_channels_ch1_ce0;
    out_channels_ch1_d0 <= grp_yuv2rgb_1_fu_164_out_channels_ch1_d0;
    out_channels_ch1_we0 <= grp_yuv2rgb_1_fu_164_out_channels_ch1_we0;
    out_channels_ch2_address0 <= grp_yuv2rgb_1_fu_164_out_channels_ch2_address0;
    out_channels_ch2_ce0 <= grp_yuv2rgb_1_fu_164_out_channels_ch2_ce0;
    out_channels_ch2_d0 <= grp_yuv2rgb_1_fu_164_out_channels_ch2_d0;
    out_channels_ch2_we0 <= grp_yuv2rgb_1_fu_164_out_channels_ch2_we0;
    out_channels_ch3_address0 <= grp_yuv2rgb_1_fu_164_out_channels_ch3_address0;
    out_channels_ch3_ce0 <= grp_yuv2rgb_1_fu_164_out_channels_ch3_ce0;
    out_channels_ch3_d0 <= grp_yuv2rgb_1_fu_164_out_channels_ch3_d0;
    out_channels_ch3_we0 <= grp_yuv2rgb_1_fu_164_out_channels_ch3_we0;
    out_height <= grp_yuv2rgb_1_fu_164_ap_return_1;

    out_height_ap_vld_assign_proc : process(grp_yuv2rgb_1_fu_164_ap_done, ap_CS_fsm_state6)
    begin
        if (((grp_yuv2rgb_1_fu_164_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            out_height_ap_vld <= ap_const_logic_1;
        else 
            out_height_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    out_width <= grp_yuv2rgb_1_fu_164_ap_return_0;

    out_width_ap_vld_assign_proc : process(grp_yuv2rgb_1_fu_164_ap_done, ap_CS_fsm_state6)
    begin
        if (((grp_yuv2rgb_1_fu_164_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            out_width_ap_vld <= ap_const_logic_1;
        else 
            out_width_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch1_address0_assign_proc : process(ap_CS_fsm_state4, grp_yuv_scale_fu_146_out_channels_ch1_address0, grp_yuv2rgb_1_fu_164_in_channels_ch1_address0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_scale_channels_ch1_address0 <= grp_yuv2rgb_1_fu_164_in_channels_ch1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_scale_channels_ch1_address0 <= grp_yuv_scale_fu_146_out_channels_ch1_address0;
        else 
            p_scale_channels_ch1_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_scale_channels_ch1_ce0_assign_proc : process(ap_CS_fsm_state4, grp_yuv_scale_fu_146_out_channels_ch1_ce0, grp_yuv2rgb_1_fu_164_in_channels_ch1_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_scale_channels_ch1_ce0 <= grp_yuv2rgb_1_fu_164_in_channels_ch1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_scale_channels_ch1_ce0 <= grp_yuv_scale_fu_146_out_channels_ch1_ce0;
        else 
            p_scale_channels_ch1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch1_we0_assign_proc : process(ap_CS_fsm_state4, grp_yuv_scale_fu_146_out_channels_ch1_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_scale_channels_ch1_we0 <= grp_yuv_scale_fu_146_out_channels_ch1_we0;
        else 
            p_scale_channels_ch1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch2_address0_assign_proc : process(ap_CS_fsm_state4, grp_yuv_scale_fu_146_out_channels_ch2_address0, grp_yuv2rgb_1_fu_164_in_channels_ch2_address0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_scale_channels_ch2_address0 <= grp_yuv2rgb_1_fu_164_in_channels_ch2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_scale_channels_ch2_address0 <= grp_yuv_scale_fu_146_out_channels_ch2_address0;
        else 
            p_scale_channels_ch2_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_scale_channels_ch2_ce0_assign_proc : process(ap_CS_fsm_state4, grp_yuv_scale_fu_146_out_channels_ch2_ce0, grp_yuv2rgb_1_fu_164_in_channels_ch2_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_scale_channels_ch2_ce0 <= grp_yuv2rgb_1_fu_164_in_channels_ch2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_scale_channels_ch2_ce0 <= grp_yuv_scale_fu_146_out_channels_ch2_ce0;
        else 
            p_scale_channels_ch2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch2_we0_assign_proc : process(ap_CS_fsm_state4, grp_yuv_scale_fu_146_out_channels_ch2_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_scale_channels_ch2_we0 <= grp_yuv_scale_fu_146_out_channels_ch2_we0;
        else 
            p_scale_channels_ch2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch3_address0_assign_proc : process(ap_CS_fsm_state4, grp_yuv_scale_fu_146_out_channels_ch3_address0, grp_yuv2rgb_1_fu_164_in_channels_ch3_address0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_scale_channels_ch3_address0 <= grp_yuv2rgb_1_fu_164_in_channels_ch3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_scale_channels_ch3_address0 <= grp_yuv_scale_fu_146_out_channels_ch3_address0;
        else 
            p_scale_channels_ch3_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_scale_channels_ch3_ce0_assign_proc : process(ap_CS_fsm_state4, grp_yuv_scale_fu_146_out_channels_ch3_ce0, grp_yuv2rgb_1_fu_164_in_channels_ch3_ce0, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_scale_channels_ch3_ce0 <= grp_yuv2rgb_1_fu_164_in_channels_ch3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_scale_channels_ch3_ce0 <= grp_yuv_scale_fu_146_out_channels_ch3_ce0;
        else 
            p_scale_channels_ch3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_scale_channels_ch3_we0_assign_proc : process(ap_CS_fsm_state4, grp_yuv_scale_fu_146_out_channels_ch3_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_scale_channels_ch3_we0 <= grp_yuv_scale_fu_146_out_channels_ch3_we0;
        else 
            p_scale_channels_ch3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch1_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, grp_rgb2yuv_1_fu_126_out_channels_ch1_address0, grp_yuv_scale_fu_146_in_channels_ch1_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_yuv_channels_ch1_address0 <= grp_yuv_scale_fu_146_in_channels_ch1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch1_address0 <= grp_rgb2yuv_1_fu_126_out_channels_ch1_address0;
        else 
            p_yuv_channels_ch1_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_yuv_channels_ch1_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, grp_rgb2yuv_1_fu_126_out_channels_ch1_ce0, grp_yuv_scale_fu_146_in_channels_ch1_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_yuv_channels_ch1_ce0 <= grp_yuv_scale_fu_146_in_channels_ch1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch1_ce0 <= grp_rgb2yuv_1_fu_126_out_channels_ch1_ce0;
        else 
            p_yuv_channels_ch1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch1_we0_assign_proc : process(ap_CS_fsm_state2, grp_rgb2yuv_1_fu_126_out_channels_ch1_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch1_we0 <= grp_rgb2yuv_1_fu_126_out_channels_ch1_we0;
        else 
            p_yuv_channels_ch1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch2_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, grp_rgb2yuv_1_fu_126_out_channels_ch2_address0, grp_yuv_scale_fu_146_in_channels_ch2_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_yuv_channels_ch2_address0 <= grp_yuv_scale_fu_146_in_channels_ch2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch2_address0 <= grp_rgb2yuv_1_fu_126_out_channels_ch2_address0;
        else 
            p_yuv_channels_ch2_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_yuv_channels_ch2_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, grp_rgb2yuv_1_fu_126_out_channels_ch2_ce0, grp_yuv_scale_fu_146_in_channels_ch2_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_yuv_channels_ch2_ce0 <= grp_yuv_scale_fu_146_in_channels_ch2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch2_ce0 <= grp_rgb2yuv_1_fu_126_out_channels_ch2_ce0;
        else 
            p_yuv_channels_ch2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch2_we0_assign_proc : process(ap_CS_fsm_state2, grp_rgb2yuv_1_fu_126_out_channels_ch2_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch2_we0 <= grp_rgb2yuv_1_fu_126_out_channels_ch2_we0;
        else 
            p_yuv_channels_ch2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch3_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, grp_rgb2yuv_1_fu_126_out_channels_ch3_address0, grp_yuv_scale_fu_146_in_channels_ch3_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_yuv_channels_ch3_address0 <= grp_yuv_scale_fu_146_in_channels_ch3_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch3_address0 <= grp_rgb2yuv_1_fu_126_out_channels_ch3_address0;
        else 
            p_yuv_channels_ch3_address0 <= "XXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_yuv_channels_ch3_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, grp_rgb2yuv_1_fu_126_out_channels_ch3_ce0, grp_yuv_scale_fu_146_in_channels_ch3_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            p_yuv_channels_ch3_ce0 <= grp_yuv_scale_fu_146_in_channels_ch3_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch3_ce0 <= grp_rgb2yuv_1_fu_126_out_channels_ch3_ce0;
        else 
            p_yuv_channels_ch3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_yuv_channels_ch3_we0_assign_proc : process(ap_CS_fsm_state2, grp_rgb2yuv_1_fu_126_out_channels_ch3_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            p_yuv_channels_ch3_we0 <= grp_rgb2yuv_1_fu_126_out_channels_ch3_we0;
        else 
            p_yuv_channels_ch3_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
